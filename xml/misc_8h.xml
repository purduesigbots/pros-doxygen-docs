<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="misc_8h" kind="file" language="C++">
    <compoundname>misc.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="api_8h" local="yes">pros/include/api.h</includedby>
    <includedby refid="misc_8hpp" local="yes">pros/include/pros/misc.hpp</includedby>
    <incdepgraph>
      <node id="219">
        <label>pros/include/pros/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="223">
        <label>pros/include/kapi.h</label>
        <link refid="kapi_8h"/>
      </node>
      <node id="221">
        <label>pros/include/pros/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>pros/include/pros/api_legacy.h</label>
        <link refid="api__legacy_8h"/>
      </node>
      <node id="224">
        <label>pros/include/pros/apix.h</label>
        <link refid="apix_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>pros/include/api.h</label>
        <link refid="api_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>pros/include/main.h</label>
        <link refid="main_8h"/>
      </node>
      <node id="227">
        <label>pros/include/pros/misc.hpp</label>
        <link refid="misc_8hpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="misc_8h_1acceaccd4cf9a93ef86e8f21206a6645a" prot="public" static="no">
        <name>NUM_V5_PORTS</name>
        <initializer>(22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="26" column="9" bodyfile="pros/include/pros/misc.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1adefb84e79d34a20dc8dc91813f289323" prot="public" static="no">
        <name>COMPETITION_DISABLED</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
<para>V5 Competition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="31" column="9" bodyfile="pros/include/pros/misc.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1ab1963437a4b6f9561d57f7e7e44bc853" prot="public" static="no">
        <name>COMPETITION_AUTONOMOUS</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="32" column="9" bodyfile="pros/include/pros/misc.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1ae54538bebc289953e9238c59788a9649" prot="public" static="no">
        <name>COMPETITION_CONNECTED</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="33" column="9" bodyfile="pros/include/pros/misc.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1a1577cfc36f0d2d6f73a26263e9b518ce" prot="public" static="no">
        <name>competition_is_disabled</name>
        <param></param>
        <initializer>((<ref refid="misc_8h_1a71a09bfc4dbfb9c07c917c701dc3e994" kindref="member">competition_get_status</ref>() &amp; <ref refid="misc_8h_1adefb84e79d34a20dc8dc91813f289323" kindref="member">COMPETITION_DISABLED</ref>) != 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="52" column="10" bodyfile="pros/include/pros/misc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1a5601e15718be476d66ecaf2cdcbe061f" prot="public" static="no">
        <name>competition_is_connected</name>
        <param></param>
        <initializer>((<ref refid="misc_8h_1a71a09bfc4dbfb9c07c917c701dc3e994" kindref="member">competition_get_status</ref>() &amp; <ref refid="misc_8h_1ae54538bebc289953e9238c59788a9649" kindref="member">COMPETITION_CONNECTED</ref>) != 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="53" column="9" bodyfile="pros/include/pros/misc.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8h_1a6bbebf8507344dd452503249813923c8" prot="public" static="no">
        <name>competition_is_autonomous</name>
        <param></param>
        <initializer>((<ref refid="misc_8h_1a71a09bfc4dbfb9c07c917c701dc3e994" kindref="member">competition_get_status</ref>() &amp; <ref refid="misc_8h_1ab1963437a4b6f9561d57f7e7e44bc853" kindref="member">COMPETITION_AUTONOMOUS</ref>) != 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="54" column="9" bodyfile="pros/include/pros/misc.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="misc_8h_1af1323f00203099060d46f722b1fbd460" prot="public" static="no">
        <name>controller_id_e_t</name>
        <enumvalue id="misc_8h_1af1323f00203099060d46f722b1fbd460a1c9d9311575877d185c44df1cadad226" prot="public">
          <name>E_CONTROLLER_MASTER</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1af1323f00203099060d46f722b1fbd460a62d367ebc8ce395520d786f5c12614ac" prot="public">
          <name>E_CONTROLLER_PARTNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>V5 Controller. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="64" column="1" bodyfile="pros/include/pros/misc.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5" prot="public" static="no">
        <name>controller_analog_e_t</name>
        <enumvalue id="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5ac73153bd6a186402cb8fad10c069ec55" prot="public">
          <name>E_CONTROLLER_ANALOG_LEFT_X</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5ac68939b7adc180b25b95367fd0098e99" prot="public">
          <name>E_CONTROLLER_ANALOG_LEFT_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5a1881009d58a89b01179876a44a768774" prot="public">
          <name>E_CONTROLLER_ANALOG_RIGHT_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5a3954a2f3b6de53400df445cc144a67ca" prot="public">
          <name>E_CONTROLLER_ANALOG_RIGHT_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="66" column="1" bodyfile="pros/include/pros/misc.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="misc_8h_1a8c380ff02828ee53954bc0ce274253ed" prot="public" static="no">
        <name>controller_digital_e_t</name>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda6152392f863b995bc682e6a7129dbdae" prot="public">
          <name>E_CONTROLLER_DIGITAL_L1</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253edab0b7af86329d2806c7e52b8396ca3a76" prot="public">
          <name>E_CONTROLLER_DIGITAL_L2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253edae3ae971723bd1d263b7661264df420fc" prot="public">
          <name>E_CONTROLLER_DIGITAL_R1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda982e210433ab2a7ba149c4008ad73851" prot="public">
          <name>E_CONTROLLER_DIGITAL_R2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda092df532483a0b27281748df9d226772" prot="public">
          <name>E_CONTROLLER_DIGITAL_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda4290d3c38ae937a54b8409c7567be50d" prot="public">
          <name>E_CONTROLLER_DIGITAL_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda83537ab72f80c74cb4c06a195b885b6c" prot="public">
          <name>E_CONTROLLER_DIGITAL_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda6311765554410202cc2c099695640d91" prot="public">
          <name>E_CONTROLLER_DIGITAL_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda1ba98d2c4900c0ad3123f15090779fad" prot="public">
          <name>E_CONTROLLER_DIGITAL_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda3b8c6ebc62fb8133413bb7090814ed54" prot="public">
          <name>E_CONTROLLER_DIGITAL_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253eda89dfc687cc16e2e7b1ad022b47a698c4" prot="public">
          <name>E_CONTROLLER_DIGITAL_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="misc_8h_1a8c380ff02828ee53954bc0ce274253edabf8d8d50802f9417ba1f1512d2822f98" prot="public">
          <name>E_CONTROLLER_DIGITAL_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="73" column="1" bodyfile="pros/include/pros/misc.h" bodystart="73" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="misc_8h_1a71a09bfc4dbfb9c07c917c701dc3e994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t competition_get_status</definition>
        <argsstring>(void)</argsstring>
        <name>competition_get_status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current status of the competition control. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The competition control status as a mask of bits with COMPETITION_{ENABLED,AUTONOMOUS,CONNECTED}. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1afd1e850bd6613e2fb01960dc0cebb2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_is_connected</definition>
        <argsstring>(controller_id_e_t id)</argsstring>
        <name>controller_is_connected</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Checks if the controller is connected. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the controller is connected, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1aed67feb70cbdb115e9ec2c7cc28a5da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_get_analog</definition>
        <argsstring>(controller_id_e_t id, controller_analog_e_t channel)</argsstring>
        <name>controller_get_analog</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="misc_8h_1a8bdd0963e2bc0d4fbe03435eee8a5ca5" kindref="member">controller_analog_e_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Gets the value of an analog channel (joystick) on a controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The analog channel to get. Must be one of ANALOG_LEFT_X, ANALOG_LEFT_Y, ANALOG_RIGHT_X, ANALOG_RIGHT_Y</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current reading of the analog channel: [-127, 127]. If the controller was not connected, then 0 is returned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a54033388f5d4e3f8b291d5a6f2122f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_get_battery_capacity</definition>
        <argsstring>(controller_id_e_t id)</argsstring>
        <name>controller_get_battery_capacity</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the battery capacity of the given controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The controller&apos;s battery capacity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1aeab690f86735cb6685f3c3184c54ba2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_get_battery_level</definition>
        <argsstring>(controller_id_e_t id)</argsstring>
        <name>controller_get_battery_level</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the battery level of the given controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The controller&apos;s battery level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1af01b9e0d93d55a50b09c24f7ad5900fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_get_digital</definition>
        <argsstring>(controller_id_e_t id, controller_digital_e_t button)</argsstring>
        <name>controller_get_digital</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="misc_8h_1a8c380ff02828ee53954bc0ce274253ed" kindref="member">controller_digital_e_t</ref></type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Checks if a digital channel (button) on the controller is currently pressed. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The button to read. Must be one of DIGITAL_{RIGHT,DOWN,LEFT,UP,A,B,Y,X,R1,R2,L1,L2}</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the button on the controller is pressed. If the controller was not connected, then 0 is returned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a89d292cfe75a2abac6673a965697ac8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_get_digital_new_press</definition>
        <argsstring>(controller_id_e_t id, controller_digital_e_t button)</argsstring>
        <name>controller_get_digital_new_press</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="misc_8h_1a8c380ff02828ee53954bc0ce274253ed" kindref="member">controller_digital_e_t</ref></type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Returns a rising-edge case for a controller button press. </para>        </briefdescription>
        <detaileddescription>
<para>This function is not thread-safe. Multiple tasks polling a single button may return different results under the same circumstances, so only one task should call this function for any given button. E.g., Task A calls this function for buttons 1 and 2. Task B may call this function for button 3, but should not for buttons 1 or 2. A typical use-case for this function is to call inside opcontrol to detect new button presses, and not in any other tasks.</para><para>This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The button to read. Must be one of DIGITAL_{RIGHT,DOWN,LEFT,UP,A,B,Y,X,R1,R2,L1,L2}</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the button on the controller is pressed and had not been pressed the last time this function was called, 0 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1af7c72fcad599c9c0517ef22e6e813ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_print</definition>
        <argsstring>(controller_id_e_t id, uint8_t line, uint8_t col, const char *fmt,...)</argsstring>
        <name>controller_print</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Sets text to the controller LCD screen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Controller text setting is currently in beta, so continuous, fast updates will not work well.</para></simplesect>
This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number at which the text will be displayed [0-2] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>The column number at which the text will be displayed [0-14] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string to print to the controller </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument list for the format string</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a311402c942d9497ccb67e63ee2fa31a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_set_text</definition>
        <argsstring>(controller_id_e_t id, uint8_t line, uint8_t col, const char *str)</argsstring>
        <name>controller_set_text</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Sets text to the controller LCD screen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Controller text setting is currently in beta, so continuous, fast updates will not work well.</para></simplesect>
This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number at which the text will be displayed [0-2] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>The column number at which the text will be displayed [0-14] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The pre-formatted string to print to the controller</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a22499128069a56f2ff041c11a9a33da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_clear_line</definition>
        <argsstring>(controller_id_e_t id, uint8_t line)</argsstring>
        <name>controller_clear_line</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Clears an individual line of the controller screen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Controller text setting is currently in beta, so continuous, fast updates will not work well.</para></simplesect>
This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number to clear [0-2]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a730715344d091ed017894cf907e9c3ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_clear</definition>
        <argsstring>(controller_id_e_t id)</argsstring>
        <name>controller_clear</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Clears all of the lines on the controller screen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Controller text setting is currently in beta, so continuous, fast updates will not work well. On vexOS version 1.0.0 this function will block for 110ms.</para></simplesect>
This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1aced0f39c3b2206489d1cc4bf97b91a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t controller_rumble</definition>
        <argsstring>(controller_id_e_t id, const char *rumble_pattern)</argsstring>
        <name>controller_rumble</name>
        <param>
          <type><ref refid="misc_8h_1af1323f00203099060d46f722b1fbd460" kindref="member">controller_id_e_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rumble_pattern</declname>
        </param>
        <briefdescription>
<para>Rumble the controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Controller rumble activation is currently in beta, so continuous, fast updates will not work well.</para></simplesect>
This function uses the following values of errno when an error state is reached: EINVAL - A value other than E_CONTROLLER_MASTER or E_CONTROLLER_PARTNER is given. EACCES - Another resource is currently trying to access the controller port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the controller (e.g. the master or partner controller). Must be one of CONTROLLER_MASTER or CONTROLLER_PARTNER </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rumble_pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>A string consisting of the characters &apos;.&apos;, &apos;-&apos;, and &apos; &apos;, where dots are short rumbles, dashes are long rumbles, and spaces are pauses. Maximum supported length is 8 characters.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a3e2a84e664eb602bd21a481259a94f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t battery_get_voltage</definition>
        <argsstring>(void)</argsstring>
        <name>battery_get_voltage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current voltage of the battery, as reported by VEXos. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para><para><simplesect kind="return"><para>The current voltage of the battery </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a20e84af87727a57282efd63cf76c8e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t battery_get_current</definition>
        <argsstring>(void)</argsstring>
        <name>battery_get_current</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current current of the battery, as reported by VEXos. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para><para><simplesect kind="return"><para>The current current of the battery </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1a60d32e15ea7ab1b2d7fa6b63c44a5027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double battery_get_temperature</definition>
        <argsstring>(void)</argsstring>
        <name>battery_get_temperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current temperature of the battery, as reported by VEXos. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para><para><simplesect kind="return"><para>The current temperature of the battery </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1ae692171cfb44885421dc1ef873701e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double battery_get_capacity</definition>
        <argsstring>(void)</argsstring>
        <name>battery_get_capacity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current capacity of the battery, as reported by VEXos. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para><para><simplesect kind="return"><para>The current capacity of the battery </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="misc_8h_1ab70622da49049f2ea3b0bc4d517f051d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t usd_is_installed</definition>
        <argsstring>(void)</argsstring>
        <name>usd_is_installed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks if the SD card is installed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if the SD card is installed, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/misc.h" line="432" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains prototypes for miscellaneous functions pertaining to the controller, battery, and competition control. </para>    </briefdescription>
    <detaileddescription>
<para>Visit <ulink url="https://pros.cs.purdue.edu/v5/tutorials/topical/controller.html">https://pros.cs.purdue.edu/v5/tutorials/topical/controller.html</ulink> to learn more.</para><para>This file should not be modified by users, since it gets replaced whenever a kernel upgrade occurs.</para><para>Copyright (c) 2017-2020, Purdue University ACM SIGBots. All rights reservered.</para><para>This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>    </detaileddescription>
    <location file="pros/include/pros/misc.h"/>
  </compounddef>
</doxygen>
