<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="main_8h" kind="file" language="C++">
    <compoundname>main.h</compoundname>
    <includes refid="api_8h" local="yes">api.h</includes>
    <incdepgraph>
      <node id="105">
        <label>stdbool.h</label>
      </node>
      <node id="116">
        <label>pros/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>display/lvgl.h</label>
      </node>
      <node id="107">
        <label>stdint.h</label>
      </node>
      <node id="109">
        <label>stdlib.h</label>
      </node>
      <node id="103">
        <label>errno.h</label>
      </node>
      <node id="106">
        <label>stddef.h</label>
      </node>
      <node id="113">
        <label>pros/imu.h</label>
        <link refid="imu_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>pros/llemu.h</label>
        <link refid="llemu_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>unistd.h</label>
      </node>
      <node id="111">
        <label>pros/adi.h</label>
        <link refid="adi_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>api.h</label>
        <link refid="api_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>math.h</label>
      </node>
      <node id="119">
        <label>pros/vision.h</label>
        <link refid="vision_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>pros/motors.h</label>
        <link refid="motors_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>pros/colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="118">
        <label>pros/rtos.h</label>
        <link refid="rtos_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>pros/include/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8h_1ae5817dbade24ea595c3ce938b34f9994" prot="public" static="no">
        <name>PROS_USE_SIMPLE_NAMES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If defined, some commonly used enums will have preprocessor macros which give a shorter, more convenient naming pattern. If this isn&apos;t desired, simply comment the following line out.</para><para>For instance, E_CONTROLLER_MASTER has a shorter name: CONTROLLER_MASTER. E_CONTROLLER_MASTER is pedantically correct within the PROS styleguide, but not convienent for most student programmers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="27" column="9" bodyfile="pros/include/main.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8h_1ab1b081349029f8bf68a7f2086732e42b" prot="public" static="no">
        <name>PROS_USE_LITERALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If defined, C++ literals will be available for use. All literals are in the <ref refid="namespacepros_1_1literals" kindref="compound">pros::literals</ref> namespace.</para><para>For instance, you can do <computeroutput>4_mtr = 50</computeroutput> to set motor 4&apos;s target velocity to 50 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="35" column="9" bodyfile="pros/include/main.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8h_1a2df3d06bc5bced154da27fce393f991f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void autonomous</definition>
        <argsstring>(void)</argsstring>
        <name>autonomous</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>You should add more #includes here If you find doing <ref refid="classpros_1_1Motor" kindref="compound">pros::Motor()</ref> to be tedious and you&apos;d prefer just to do Motor, you can use the namespace with the following commented out line.</para><para>IMPORTANT: Only the okapi or pros namespace may be used, not both concurrently! The okapi namespace will export all symbols inside the pros namespace. Prototypes for the competition control tasks are redefined here to ensure that they can be called from user code (i.e. calling autonomous from a button press in <ref refid="main_8h_1a1903abdb5ef0f301d660754c8315fc17" kindref="member">opcontrol()</ref> for testing purposes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a9efe22aaead3a5e936b5df459de02eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a3ed01880f60e5a3afffc71f623174dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disabled</definition>
        <argsstring>(void)</argsstring>
        <name>disabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a16a77889800f9a99f69f9dd026013505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void competition_initialize</definition>
        <argsstring>(void)</argsstring>
        <name>competition_initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8h_1a1903abdb5ef0f301d660754c8315fc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void opcontrol</definition>
        <argsstring>(void)</argsstring>
        <name>opcontrol</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/main.h" line="69" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Contains common definitions and header files used throughout your PROS project.</para><para>Copyright (c) 2017-2020, Purdue University ACM SIGBots. All rights reserved.</para><para>This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>    </detaileddescription>
    <location file="pros/include/main.h"/>
  </compounddef>
</doxygen>
