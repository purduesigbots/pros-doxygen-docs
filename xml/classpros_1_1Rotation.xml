<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1Rotation" kind="class" language="C++" prot="public">
    <compoundname>pros::Rotation</compoundname>
    <includes refid="rotation_8hpp" local="yes">rotation.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpros_1_1Rotation_1a16b806c98fffb4fd7235419ef22ac101" prot="private" static="no" mutable="no">
        <type>const std::uint8_t</type>
        <definition>const std::uint8_t _port</definition>
        <argsstring></argsstring>
        <name>_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="30" column="20" bodyfile="pros/rotation.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1Rotation_1a5326b5efff212734e1c45d51234f41b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Rotation</definition>
        <argsstring>(const std::uint8_t port)</argsstring>
        <name>Rotation</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="33" column="1" bodyfile="pros/rotation.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1a8213234d390dd0bb18bcea119d37bd83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rotation</definition>
        <argsstring>(const std::uint8_t port, const bool reverse_flag)</argsstring>
        <name>Rotation</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1af3ac11ae6daec3a4eb247f270a476b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Reset the current absolute position to be the same as the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor angle.</para>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="51" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1afb4e63f82dffc58b0fb0569f73250ff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_data_rate</definition>
        <argsstring>(std::uint32_t rate) const</argsstring>
        <name>set_data_rate</name>
        <param>
          <type>std::uint32_t</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s refresh interval in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThe" kindref="compound">The</ref> rate may be specified in increments of 5ms, and will be rounded down to the nearest increment. <ref refid="structThe" kindref="compound">The</ref> minimum allowable refresh rate is 5ms. <ref refid="structThe" kindref="compound">The</ref> default rate is 10ms.</para>
<para>As values are copied into the shared memory buffer only at 10ms intervals, setting this value to less than 10ms does not mean that you can poll the sensor&apos;s values any faster. However, it will guarantee that the data is as recent as possible.</para>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structThe" kindref="compound">The</ref> data refresh interval in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="74" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1ad020873b4dea4b626dd4b66581d32c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_position</definition>
        <argsstring>(std::uint32_t position)</argsstring>
        <name>set_position</name>
        <param>
          <type>std::uint32_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor position reading to a desired rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structThe" kindref="compound">The</ref> position in terms of ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="89" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1a5ca85c5a070fd471f2fb88df81632305" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reset_position</definition>
        <argsstring>(void)</argsstring>
        <name>reset_position</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor to a desired rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structThe" kindref="compound">The</ref> position in terms of ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="104" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1a444e3384b0c2c64f7ee7394a0288511e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_position</definition>
        <argsstring>()</argsstring>
        <name>get_position</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current position in centidegrees. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para><ref refid="structThe" kindref="compound">The</ref> position value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="117" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1ab3d7d0bdab17fabf63abaf0a4dd79501" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_velocity</definition>
        <argsstring>()</argsstring>
        <name>get_velocity</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current velocity in centidegrees per second. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structThe" kindref="compound">The</ref> V5 <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structThe" kindref="compound">The</ref> value or PROS_ERR_F if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="133" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1aff03c6491724b9e3f4ff625b8757a035" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_angle</definition>
        <argsstring>()</argsstring>
        <name>get_angle</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current position in centidegrees. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para><ref refid="structThe" kindref="compound">The</ref> angle value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="146" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1ae46b58ce4cef8f393bb6e08a5ab7b56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_reversed</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_reversed</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s direction reversed flag. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the direction of the rotational sensor is reversed or not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="163" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1ae56a86898fb0e2d4dec04bfa11e17ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reverse</definition>
        <argsstring>()</argsstring>
        <name>reverse</name>
        <briefdescription>
<para>Reverse the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s direction. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="176" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Rotation_1aa51ed4619ee4a02a7d2d9fcd9cc4a9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_reversed</definition>
        <argsstring>()</argsstring>
        <name>get_reversed</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s reversed flag. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structThis" kindref="compound">This</ref> function uses the following values of errno when an error state is reached: ENXIO - <ref refid="structThe" kindref="compound">The</ref> given value is not within the range of V5 ports (1-21). ENODEV - <ref refid="structThe" kindref="compound">The</ref> port cannot be configured as an <ref refid="classpros_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>Reversed value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="189" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pros/rotation.hpp" line="29" column="15" bodyfile="pros/rotation.hpp" bodystart="29" bodyend="190"/>
    <listofallmembers>
      <member refid="classpros_1_1Rotation_1a16b806c98fffb4fd7235419ef22ac101" prot="private" virt="non-virtual"><scope>pros::Rotation</scope><name>_port</name></member>
      <member refid="classpros_1_1Rotation_1aff03c6491724b9e3f4ff625b8757a035" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>get_angle</name></member>
      <member refid="classpros_1_1Rotation_1a444e3384b0c2c64f7ee7394a0288511e" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>get_position</name></member>
      <member refid="classpros_1_1Rotation_1aa51ed4619ee4a02a7d2d9fcd9cc4a9c7" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>get_reversed</name></member>
      <member refid="classpros_1_1Rotation_1ab3d7d0bdab17fabf63abaf0a4dd79501" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>get_velocity</name></member>
      <member refid="classpros_1_1Rotation_1af3ac11ae6daec3a4eb247f270a476b14" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>reset</name></member>
      <member refid="classpros_1_1Rotation_1a5ca85c5a070fd471f2fb88df81632305" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>reset_position</name></member>
      <member refid="classpros_1_1Rotation_1ae56a86898fb0e2d4dec04bfa11e17ce3" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>reverse</name></member>
      <member refid="classpros_1_1Rotation_1a5326b5efff212734e1c45d51234f41b5" prot="public" virt="non-virtual"><scope>pros::Rotation</scope><name>Rotation</name></member>
      <member refid="classpros_1_1Rotation_1a8213234d390dd0bb18bcea119d37bd83" prot="public" virt="non-virtual"><scope>pros::Rotation</scope><name>Rotation</name></member>
      <member refid="classpros_1_1Rotation_1afb4e63f82dffc58b0fb0569f73250ff6" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>set_data_rate</name></member>
      <member refid="classpros_1_1Rotation_1ad020873b4dea4b626dd4b66581d32c68" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>set_position</name></member>
      <member refid="classpros_1_1Rotation_1ae46b58ce4cef8f393bb6e08a5ab7b56e" prot="public" virt="virtual"><scope>pros::Rotation</scope><name>set_reversed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
