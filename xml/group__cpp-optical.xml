<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__cpp-optical" kind="group">
    <compoundname>cpp-optical</compoundname>
    <title>VEX Optical Sensor C++ API</title>
    <innerfile refid="optical_8hpp">optical.hpp</innerfile>
    <innerclass refid="classpros_1_1v5_1_1Optical" prot="public">pros::v5::Optical</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__cpp-optical_1gaf3814072204ecc2ad420701c9bb03a95" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Optical</definition>
        <argsstring>(const std::uint8_t port)</argsstring>
        <name>Optical</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Creates an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor object for the given port. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga172acf14d922023251daa9276adfa4a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double get_hue</definition>
        <argsstring>()</argsstring>
        <name>get_hue</name>
        <briefdescription>
<para>Get the detected color hue. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not available if gestures are being detected. Hue has a range of 0 to 359.999</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>hue value if the operation was successful or PROS_ERR_F if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="71" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga2625290e9ed8b33d335bb25a5349bb6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double get_saturation</definition>
        <argsstring>()</argsstring>
        <name>get_saturation</name>
        <briefdescription>
<para>Get the detected color saturation. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not available if gestures are being detected. Saturation has a range of 0 to 1.0</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>saturation value if the operation was successful or PROS_ERR_F if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="87" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gaf3e4b684d6ed14bdae1b79aa7e226ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double get_brightness</definition>
        <argsstring>()</argsstring>
        <name>get_brightness</name>
        <briefdescription>
<para>Get the detected color brightness. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not available if gestures are being detected. Brightness has a range of 0 to 1.0</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>brightness value if the operation was successful or PROS_ERR_F if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="103" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gaf2f75b8f8506931a5651bb48d7a8c01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_proximity</definition>
        <argsstring>()</argsstring>
        <name>get_proximity</name>
        <briefdescription>
<para>Get the detected proximity value. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not available if gestures are being detected. proximity has a range of 0 to 255.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>poximity value if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="119" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga502513388196d8d7e78d6d6d311e8cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_led_pwm</definition>
        <argsstring>(uint8_t value)</argsstring>
        <name>set_led_pwm</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the pwm value of the White LED on the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>value that ranges from 0 to 100</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>The Error code encountered </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="133" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga2453d482804c781a8fd87bbc15b10097" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_led_pwm</definition>
        <argsstring>()</argsstring>
        <name>get_led_pwm</name>
        <briefdescription>
<para>Get the pwm value of the White LED on the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>value that ranges from 0 to 100</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>LED pwm value if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="148" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gae793476408af54601bb422474b82ca99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>pros::c::optical_rgb_s_t</type>
        <definition>virtual pros::c::optical_rgb_s_t get_rgb</definition>
        <argsstring>()</argsstring>
        <name>get_rgb</name>
        <briefdescription>
<para>Get the processed RGBC data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>rgb value if the operation was successful or an <ref refid="structoptical__rgb__s__t" kindref="compound">optical_rgb_s_t</ref> with all fields set to PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="161" column="34"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga2b2249e566062cd26c3e5ea7201a327e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>pros::c::optical_raw_s_t</type>
        <definition>virtual pros::c::optical_raw_s_t get_raw</definition>
        <argsstring>()</argsstring>
        <name>get_raw</name>
        <briefdescription>
<para>Get the raw un-processed RGBC data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>raw rgb value if the operation was successful or an <ref refid="structoptical__raw__s__t" kindref="compound">optical_raw_s_t</ref> with all fields set to PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="174" column="34"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga7970b59b09c9063a8a686cfcf9ffb5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>pros::c::optical_direction_e_t</type>
        <definition>virtual pros::c::optical_direction_e_t get_gesture</definition>
        <argsstring>()</argsstring>
        <name>get_gesture</name>
        <briefdescription>
<para>Get the most recent gesture data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Gestures will be cleared after 500mS 0 = no gesture 1 = up (towards cable) 2 = down 3 = right 4 = left</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>gesture value if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="194" column="40"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gac8c6d23954aedd8f0557c5b3793bf805" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>pros::c::optical_gesture_s_t</type>
        <definition>virtual pros::c::optical_gesture_s_t get_gesture_raw</definition>
        <argsstring>()</argsstring>
        <name>get_gesture_raw</name>
        <briefdescription>
<para>Get the most recent raw gesture data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>gesture value if the operation was successful or an <ref refid="structoptical__gesture__s__t" kindref="compound">optical_gesture_s_t</ref> with all fields set to PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="207" column="38"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gab1b631c44b7f27b45703a2456985674e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t enable_gesture</definition>
        <argsstring>()</argsstring>
        <name>enable_gesture</name>
        <briefdescription>
<para>Enable gesture detection on the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation is successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="220" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1ga6bad3c7e71be57013fa7f46d49f5612a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t disable_gesture</definition>
        <argsstring>()</argsstring>
        <name>disable_gesture</name>
        <briefdescription>
<para>Disable gesture detection on the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation is successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="233" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-optical_1gabfb87cfad20a0316415fddff116a1e8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacepros_1ad258d4c51629346fceac4679b3209ad9" kindref="member">pros::DeviceType</ref></type>
        <definition>pros::DeviceType get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <reimplements refid="classpros_1_1v5_1_1Device_1a9a4bb29be088c9622cbb960eda5966c8">get_type</reimplements>
        <briefdescription>
<para>Returns the type of device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="249" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      <memberdef kind="friend" id="group__cpp-optical_1ga8a798c2f3ccbd6cf118e408dba8aa61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, pros::Optical &amp;optical)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classpros_1_1v5_1_1Optical" kindref="compound">pros::Optical</ref> &amp;</type>
          <declname>optical</declname>
        </param>
        <briefdescription>
<para>This is the overload for the &lt;&lt; operator for printing to streams. </para>
        </briefdescription>
        <detaileddescription>
<para>Prints in format(this below is all in one line with no new line): <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> [port: (port number), hue: (hue), saturation: (saturation), brightness: (brightness), proximity: (proximity), rgb: {red, green, blue}] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="243" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
