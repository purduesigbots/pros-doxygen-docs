<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pros_2include_2pros_2llemu_8hpp" kind="file" language="C++">
    <compoundname>llemu.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">string</includes>
    <includedby refid="api_8h" local="yes">api.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>pros/llemu.hpp</label>
        <link refid="pros_2include_2pros_2llemu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>pros/llemu.hpp</label>
        <link refid="pros_2include_2pros_2llemu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kapi.h</label>
        <link refid="kapi_8h"/>
      </node>
      <node id="4">
        <label>pros/apix.h</label>
        <link refid="apix_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>api.h</label>
        <link refid="api_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>main.h</label>
        <link refid="main_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacepros">pros</innernamespace>
    <innernamespace refid="namespacepros_1_1lcd">pros::lcd</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__cpp-llemu_1gafa86afc6491531fb4b4d7f1e18803852" prot="public" static="no">
        <name>LCD_BTN_LEFT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="124" column="17" bodyfile="pros/llemu.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__cpp-llemu_1gabf8903693b4a95a6b653916d5f6fe486" prot="public" static="no">
        <name>LCD_BTN_CENTER</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="128" column="17" bodyfile="pros/llemu.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__cpp-llemu_1ga7851ef3eb7573b194efb0a05d88f2c35" prot="public" static="no">
        <name>LCD_BTN_RIGHT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="132" column="17" bodyfile="pros/llemu.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacepros_1_1lcd_1a74245eec1486c8e1b99d6cce6ba5bd51" prot="public" static="no">
        <type>void(*)(void)</type>
        <definition>typedef void(* lcd_btn_cb_fn_t)(void)</definition>
        <argsstring></argsstring>
        <name>lcd_btn_cb_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="64" column="5" bodyfile="pros/llemu.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepros_1_1lcd_1a9ad5209075696f6a8c4576179d8b1be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__attribute__((weak)) bool set_text(std __attribute__((weak)) bool clear_line(std</type>
        <definition>__attribute__</definition>
        <argsstring>((weak)) bool initialize(void)</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(weak)</type>
        </param>
        <briefdescription>
<para>Displays a formatted string on the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line on which to display the text [0-7] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional list of arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="76" column="12" bodyfile="pros/screen.hpp" bodystart="671" bodyend="671" declfile="pros/llemu.hpp" declline="76" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-llemu_1gaead67d10b420308d58883135f0d28099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool pros::lcd::print</definition>
        <argsstring>(std::int16_t line, const char *fmt, Params... args)</argsstring>
        <name>print</name>
        <param>
          <type>std::int16_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Params...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Displays a formatted string on the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line on which to display the text [0-7] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...args</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional list of arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#include<sp/>&quot;pros/llemu.hpp&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::lcd::initialize();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::lcd::print(0,<sp/>&quot;My<sp/>formatted<sp/>text:<sp/>%d!&quot;,<sp/>2);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/llemu.hpp" line="119" column="10" bodyfile="pros/llemu.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Legacy LCD Emulator</para>
<para>This file defines a high-level API for emulating the three-button, UART-based VEX LCD, containing a set of functions that facilitate the use of a software- emulated version of the classic VEX LCD module.</para>
<para>This file should not be modified by users, since it gets replaced whenever a kernel upgrade occurs.</para>
<para><simplesect kind="copyright"><para>(c) 2017-2023, Purdue University ACM SIGBots.</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>
    </detaileddescription>
    <location file="pros/llemu.hpp"/>
  </compounddef>
</doxygen>
