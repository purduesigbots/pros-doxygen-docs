<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1v5_1_1Motor" kind="class" language="C++" prot="public">
    <compoundname>pros::v5::Motor</compoundname>
    <basecompoundref refid="classpros_1_1v5_1_1Motor__Group" prot="public" virt="non-virtual">Motor_Group</basecompoundref>
    <basecompoundref refid="classpros_1_1v5_1_1Device" prot="public" virt="non-virtual">Device</basecompoundref>
    <includes refid="motors_8hpp" local="yes">motors.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__cpp-motors_1gabc4c3574855e049f00dadd301024aaf3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Motor</definition>
        <argsstring>(const std::int8_t port)</argsstring>
        <name>Motor</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1294" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1ga817eb0e20c9d208ad651464e7dcb7849" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Motor</definition>
        <argsstring>(const std::int8_t port, const pros::v5::Motor_Gears gearset, const bool reverse, const pros::v5::Motor_Units encoder_units)</argsstring>
        <name>Motor</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepros_1_1v5_1ac34565743ac140efe50a681e99d1d870" kindref="member">pros::v5::Motor_Gears</ref></type>
          <declname>gearset</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepros_1_1v5_1a9d601c278c32b1e46d6dd506eebc0817" kindref="member">pros::v5::Motor_Units</ref></type>
          <declname>encoder_units</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1296" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1ga7e529286a85c89c0e204a1d5ec726c9e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Motor</definition>
        <argsstring>(const std::int8_t port, const pros::v5::Motor_Gears gearset, const bool reverse)</argsstring>
        <name>Motor</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepros_1_1v5_1ac34565743ac140efe50a681e99d1d870" kindref="member">pros::v5::Motor_Gears</ref></type>
          <declname>gearset</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1299" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1ga28deb75cc36d92df0f78bfc0e2a625dc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Motor</definition>
        <argsstring>(const std::int8_t port, const pros::v5::Motor_Gears gearset)</argsstring>
        <name>Motor</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepros_1_1v5_1ac34565743ac140efe50a681e99d1d870" kindref="member">pros::v5::Motor_Gears</ref></type>
          <declname>gearset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1301" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1ga46f0b53be362bd6c3cf62ecb79cb49d8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Motor</definition>
        <argsstring>(const std::int8_t port, const bool reverse)</argsstring>
        <name>Motor</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1303" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1gaa8df9b4b398d691f5a5892763c8f9428" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacepros_1ad258d4c51629346fceac4679b3209ad9" kindref="member">DeviceType</ref></type>
        <definition>DeviceType get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <reimplements refid="classpros_1_1v5_1_1Device_1a9a4bb29be088c9622cbb960eda5966c8">get_type</reimplements>
        <briefdescription>
<para>Gets the type of device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The device type as an enum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1305" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1ad338fa6ea2f37d45d57763b176963445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t operator=</definition>
        <argsstring>(std::int32_t voltage) const</argsstring>
        <name>operator=</name>
        <param>
          <type>std::int32_t</type>
          <declname>voltage</declname>
        </param>
        <briefdescription>
<para>Sets the voltage for the motor from -128 to 127. </para>
        </briefdescription>
        <detaileddescription>
<para>This is designed to map easily to the input from the controller&apos;s analog stick for simple opcontrol use. The actual behavior of the motor is analogous to use of <ref refid="group__cpp-motors_1ga4dceeada7f369a3dd25a4944019e0631" kindref="member">pros::Motor::move()</ref>, or motorSet from the PROS 2 API.</para>
<para>This function uses the following values of errno when an error state is reached: ENODEV - The port cannot be configured as a motor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor voltage from -127 to 127</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::Motor_Group<sp/>motor_group<sp/>({1},<sp/>E_MOTOR_GEARSET_18);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::Controller<sp/>master<sp/>(E_CONTROLLER_MASTER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>motor<sp/>=<sp/>master.get_analog(E_CONTROLLER_ANALOG_LEFT_Y);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pros::delay(2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1307" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1af5ff68faf5c3be85c507f9c4121aac60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void operator+=</definition>
        <argsstring>(Motor_Group &amp;)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classpros_1_1v5_1_1Motor__Group" kindref="compound">Motor_Group</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Appends the other motor group reference to this motor group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1aa30bb091517f26ecd080e8ebe5b9a98b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void append</definition>
        <argsstring>(Motor_Group &amp;)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classpros_1_1v5_1_1Motor__Group" kindref="compound">Motor_Group</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Appends the other motor group reference to this motor group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a62f3c8a7e1902ae2cb2f4121fe5800eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void erase_port</definition>
        <argsstring>(std::int8_t port)</argsstring>
        <name>erase_port</name>
        <param>
          <type>std::int8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Removes the port (and it&apos;s reversed ) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a2298467acdd4cf33d7eced8e2f8268ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; every_is_over_current</definition>
        <argsstring>(void) const</argsstring>
        <name>every_is_over_current</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1ad3b170c875eeab7abd7777a7ff915a92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; every_is_over_temp</definition>
        <argsstring>(void) const</argsstring>
        <name>every_is_over_temp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a8f6dd0d94f2ffd14fd5c0548e0ea6902" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; every_is_reversed</definition>
        <argsstring>(void) const</argsstring>
        <name>every_is_reversed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a31ab82555993553a3e97396fdd159828" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_actual_velocity</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_actual_velocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a631d18edef12872cbd856d2e544475d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacepros_1_1v5_1ab2148aa2bceb0c2e94321c24c9b0fd67" kindref="member">Motor_Brake</ref> &gt;</type>
        <definition>std::vector&lt;Motor_Brake&gt; get_every_brake_mode</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_brake_mode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a0aa4859092be7d68f5a74105b2e804b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_current_draw</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_current_draw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a82c970340a41a1e8db3541b159972487" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_current_limit</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_current_limit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a54fabac8705784e8a580e1ca87f4180c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_direction</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_direction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a2b70875534cc4d2f6f77007ffeb4c4e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_efficiency</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_efficiency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a1be36d4c3e0146e3f26fe2507a255e84" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacepros_1_1v5_1a9d601c278c32b1e46d6dd506eebc0817" kindref="member">Motor_Units</ref> &gt;</type>
        <definition>std::vector&lt;Motor_Units&gt; get_every_encoder_units</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_encoder_units</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a60c12e1fb44265f3246d27f89f8270fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::uint32_t &gt;</type>
        <definition>std::vector&lt;std::uint32_t&gt; get_every_faults</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_faults</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a86f89ee60d53922732f19172c7b08d6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::uint32_t &gt;</type>
        <definition>std::vector&lt;std::uint32_t&gt; get_every_flags</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_flags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a2376f80b319801abc81d14ad185eca94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacepros_1_1v5_1ac34565743ac140efe50a681e99d1d870" kindref="member">Motor_Gears</ref> &gt;</type>
        <definition>std::vector&lt;Motor_Gears&gt; get_every_gearing</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_gearing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a9d0cdf4f83007babc306a804ce87ccfa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::uint8_t &gt;</type>
        <definition>std::vector&lt;std::uint8_t&gt; get_every_port</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_port</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets returns a vector with all the port numbers in the motor group. </para>
        </briefdescription>
        <detaileddescription>
<para>(ALL THE PORTS WILL BE POSITIVE) Use get_ports if you want to get the information on reversal.</para>
<para><simplesect kind="return"><para>std::vector&lt;std::uint8_t&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a0c91e93e656624a04d7554421f3bf873" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_position</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_position</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1aed6edc055fd89fdaa43a6652f01329c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_power</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_power</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a52daf6728cd4df0cc4540f73c29718a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_raw_position</definition>
        <argsstring>(std::uint32_t *const timestamp) const</argsstring>
        <name>get_every_raw_position</name>
        <param>
          <type>std::uint32_t *const</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1aaa87d390d75a311e1e568538fe818a83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_target_position</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_target_position</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1adde511c62c7d16f9073b0bced8a0beb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_target_velocity</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_target_velocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a52140c2aed0885bef17f9002cb2b53ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_temperature</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_temperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a1141b1743f9104cc1174a09f569cb8ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; get_every_torque</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_torque</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a59e89961c48d4fdc9b5b1d1b8cde1dac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_voltage</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_voltage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a527d88e4fe1db242e1428497d69e648a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt;std::int32_t&gt; get_every_voltage_limit</definition>
        <argsstring>(void) const</argsstring>
        <name>get_every_voltage_limit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1v5_1_1Motor_1a90b3c4a74ceaa8ba053bba7112e41619" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int8_t &gt;</type>
        <definition>std::vector&lt;std::int8_t&gt; get_ports</definition>
        <argsstring>(void) const</argsstring>
        <name>get_ports</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the ports object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;std::int8_t&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="1336" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Motor</label>
        <link refid="classpros_1_1v5_1_1Motor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
      <node id="2">
        <label>Motor_Group</label>
        <link refid="classpros_1_1v5_1_1Motor__Group"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Motor</label>
        <link refid="classpros_1_1v5_1_1Motor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
      <node id="2">
        <label>Motor_Group</label>
        <link refid="classpros_1_1v5_1_1Motor__Group"/>
      </node>
    </collaborationgraph>
    <location file="pros/motors.hpp" line="1292" column="46" bodyfile="pros/motors.hpp" bodystart="1292" bodyend="1337"/>
    <listofallmembers>
      <member refid="classpros_1_1v5_1_1Motor_1aa30bb091517f26ecd080e8ebe5b9a98b" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>append</name></member>
      <member refid="group__cpp-motors_1gaa30bb091517f26ecd080e8ebe5b9a98b" prot="public" virt="non-virtual" ambiguityscope="pros::v5::Motor_Group::"><scope>pros::v5::Motor</scope><name>append</name></member>
      <member refid="group__cpp-motors_1ga3ac7359521b822775fbdc3a708f9e687" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>brake</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a62f3c8a7e1902ae2cb2f4121fe5800eb" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>erase_port</name></member>
      <member refid="group__cpp-motors_1ga62f3c8a7e1902ae2cb2f4121fe5800eb" prot="public" virt="non-virtual" ambiguityscope="pros::v5::Motor_Group::"><scope>pros::v5::Motor</scope><name>erase_port</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a2298467acdd4cf33d7eced8e2f8268ad" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>every_is_over_current</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1ad3b170c875eeab7abd7777a7ff915a92" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>every_is_over_temp</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a8f6dd0d94f2ffd14fd5c0548e0ea6902" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>every_is_reversed</name></member>
      <member refid="group__cpp-motors_1gac7b4dcf86cdb27eeb013e9ba0da65f86" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_actual_velocity</name></member>
      <member refid="group__cpp-motors_1ga2e427acfd02bd06fcb9a8112eb0d54ca" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_actual_velocity</name></member>
      <member refid="group__cpp-motors_1gaf4e7a74edb8ab9df7f64ba3bd35104cf" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_brake_mode</name></member>
      <member refid="group__cpp-motors_1ga969c0a6e568a6af60072dbb2ef5a2ac4" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_brake_mode</name></member>
      <member refid="group__cpp-motors_1ga5720a781b7b4beeae824da95aae098ed" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_current_draw</name></member>
      <member refid="group__cpp-motors_1gab35d9a9d060886b5aedac14bb9880324" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_current_draw</name></member>
      <member refid="group__cpp-motors_1gaeedf9e3209b12128c93bdf6fc1c5793c" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_current_limit</name></member>
      <member refid="group__cpp-motors_1gaed7bcf42182d6b0ca8c1282b1d2ea8b2" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_current_limit</name></member>
      <member refid="group__cpp-motors_1ga5e22c8978eeab11d79846d44ce71a658" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_direction</name></member>
      <member refid="group__cpp-motors_1ga86e9b1078175e5dd1bba8beb02c39918" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_direction</name></member>
      <member refid="group__cpp-motors_1ga5fe48a04a707b27542b082b211cf134d" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_efficiency</name></member>
      <member refid="group__cpp-motors_1ga6c1abedf8323a80ea7c2193d3ded48fe" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_efficiency</name></member>
      <member refid="group__cpp-motors_1gaba2d1bf0b4b792e2e73163f965b6ef17" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_encoder_units</name></member>
      <member refid="group__cpp-motors_1ga42ff00fe52dbe2cd059fe465eb117178" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_encoder_units</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a31ab82555993553a3e97396fdd159828" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_actual_velocity</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a631d18edef12872cbd856d2e544475d5" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_brake_mode</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a0aa4859092be7d68f5a74105b2e804b2" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_current_draw</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a82c970340a41a1e8db3541b159972487" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_current_limit</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a54fabac8705784e8a580e1ca87f4180c" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_direction</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a2b70875534cc4d2f6f77007ffeb4c4e5" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_efficiency</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a1be36d4c3e0146e3f26fe2507a255e84" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_encoder_units</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a60c12e1fb44265f3246d27f89f8270fe" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_faults</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a86f89ee60d53922732f19172c7b08d6e" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_flags</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a2376f80b319801abc81d14ad185eca94" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_gearing</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a9d0cdf4f83007babc306a804ce87ccfa" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_port</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a0c91e93e656624a04d7554421f3bf873" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_position</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1aed6edc055fd89fdaa43a6652f01329c4" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_power</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a52daf6728cd4df0cc4540f73c29718a3" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_raw_position</name></member>
      <member refid="group__cpp-motors_1ga52daf6728cd4df0cc4540f73c29718a3" prot="public" virt="non-virtual" ambiguityscope="pros::v5::Motor_Group::"><scope>pros::v5::Motor</scope><name>get_every_raw_position</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1aaa87d390d75a311e1e568538fe818a83" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_target_position</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1adde511c62c7d16f9073b0bced8a0beb0" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_target_velocity</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a52140c2aed0885bef17f9002cb2b53ec" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_temperature</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a1141b1743f9104cc1174a09f569cb8ad" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_torque</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a59e89961c48d4fdc9b5b1d1b8cde1dac" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_voltage</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a527d88e4fe1db242e1428497d69e648a" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_every_voltage_limit</name></member>
      <member refid="group__cpp-motors_1ga2f054fdeb8598d4ac6933aa8eaba4848" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_faults</name></member>
      <member refid="group__cpp-motors_1ga94b840f3b3b5490e623370857ff831b4" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_faults</name></member>
      <member refid="group__cpp-motors_1ga5d121b6cd69527b2a8524b68c1599d68" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_flags</name></member>
      <member refid="group__cpp-motors_1gae8b3ba5afa497be7ca101c8e7e080665" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_flags</name></member>
      <member refid="group__cpp-motors_1ga7fbb5cb23b8d3d5aeb90bb573316757e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_gearing</name></member>
      <member refid="group__cpp-motors_1gae9429fcaf4eed03c0c101bd1de821cc0" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_gearing</name></member>
      <member refid="classpros_1_1v5_1_1Device_1a33b5263b936248a074f77f1b5ec4fa45" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_port</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1a90b3c4a74ceaa8ba053bba7112e41619" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_ports</name></member>
      <member refid="group__cpp-motors_1ga75df6d1bf98c67ff7f1887e09658f42f" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_position</name></member>
      <member refid="group__cpp-motors_1ga39d1af014298251059bfea291faa3dae" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_position</name></member>
      <member refid="group__cpp-motors_1ga179c822375c2fe243218f69f3e18237e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_power</name></member>
      <member refid="group__cpp-motors_1ga790c106aa56e5035f7205e85d42591e3" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_power</name></member>
      <member refid="group__cpp-motors_1gadad2d06b4b7257e49e98bf64c299252a" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_raw_position</name></member>
      <member refid="group__cpp-motors_1ga756fa5125a0cde4673ba864f3c059b7d" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_raw_position</name></member>
      <member refid="group__cpp-motors_1ga0e05eaa2a892c44accbae47b773481a9" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_target_position</name></member>
      <member refid="group__cpp-motors_1gaf036f8d1397df486675451062a3a493d" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_target_position</name></member>
      <member refid="group__cpp-motors_1gaa6c4295d83cf68a2dbc6cac41a052750" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_target_velocity</name></member>
      <member refid="group__cpp-motors_1ga79c3404f946126a899bb3b1108a2eea6" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_target_velocity</name></member>
      <member refid="group__cpp-motors_1ga66496e94f84aa84dcec7b49f978cc664" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_temperature</name></member>
      <member refid="group__cpp-motors_1gafc2a313a8ba70da3db73bed95725982b" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_temperature</name></member>
      <member refid="group__cpp-motors_1ga5d292814315e3d8eb7cac6aba364d98e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_torque</name></member>
      <member refid="group__cpp-motors_1ga54ee97b582b7f82b02120e34d5084b2b" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_torque</name></member>
      <member refid="group__cpp-motors_1gaa8df9b4b398d691f5a5892763c8f9428" prot="public" virt="virtual"><scope>pros::v5::Motor</scope><name>get_type</name></member>
      <member refid="group__cpp-motors_1gab79ef069a21c9d73b62badc49f11d767" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_voltage</name></member>
      <member refid="group__cpp-motors_1gac5332437708209a0458ab598245ebf70" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_voltage</name></member>
      <member refid="group__cpp-motors_1ga26d4c306d2e68dc8794f4c5e5819bebc" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_voltage_limit</name></member>
      <member refid="group__cpp-motors_1gaf096008871f815e614342ad1896342f6" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>get_voltage_limit</name></member>
      <member refid="group__cpp-motors_1gacdf7df56b77f1eb26f7d71dbd912b694" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_over_current</name></member>
      <member refid="group__cpp-motors_1ga8f45ca242099d11e13483a29dce9864e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_over_current</name></member>
      <member refid="group__cpp-motors_1ga6dd9a8741f1794315d2d7321ac75e59d" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_over_temp</name></member>
      <member refid="group__cpp-motors_1ga70260d87897dfce00af0e33028602d5a" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_over_temp</name></member>
      <member refid="group__cpp-motors_1ga913a6f2e24397575d94179aa853a6eca" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_reversed</name></member>
      <member refid="group__cpp-motors_1ga188a2dafa32273b7a3ce6f2186b35110" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>is_reversed</name></member>
      <member refid="group__cpp-motors_1ga530807d30c58f7e098a65d14c039dc57" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>modify_profiled_velocity</name></member>
      <member refid="group__cpp-motors_1gabc4c3574855e049f00dadd301024aaf3" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor</name></member>
      <member refid="group__cpp-motors_1ga817eb0e20c9d208ad651464e7dcb7849" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor</name></member>
      <member refid="group__cpp-motors_1ga7e529286a85c89c0e204a1d5ec726c9e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor</name></member>
      <member refid="group__cpp-motors_1ga28deb75cc36d92df0f78bfc0e2a625dc" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor</name></member>
      <member refid="group__cpp-motors_1ga46f0b53be362bd6c3cf62ecb79cb49d8" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor</name></member>
      <member refid="group__cpp-motors_1ga32df8fb06602599c2ad99483a5a1d121" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gaf126adbdabf25a5abbb7c6409d0c0399" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1ga195a4becb35a9b5222e47023ab95df26" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1ga86f38c340e323bd71cad0a7f7bd3ae89" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gacbafba4d4939e30a5c591dfe3b6d5c84" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gae43ffce75b3ad75e6fff0c21bb52f37d" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gaa716468d7bb6557f0f7751f06901a591" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gac0eb47f6f58622aae0dba1de4e2a7997" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1ga4bb843341711fa84b0b23123efe5ba17" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1gabb4a823aec0b33ed69c8a0a8b1f31894" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>Motor_Group</name></member>
      <member refid="group__cpp-motors_1ga4dceeada7f369a3dd25a4944019e0631" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>move</name></member>
      <member refid="group__cpp-motors_1ga6f6ed2b95a6d2e4e2f2473017dc42eec" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>move_absolute</name></member>
      <member refid="group__cpp-motors_1ga966302132cf4a74d3f2493b70764191b" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>move_relative</name></member>
      <member refid="group__cpp-motors_1ga589bce07656e7689a07ef4cef4e8152e" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>move_velocity</name></member>
      <member refid="group__cpp-motors_1ga3d490ebe9fc7bc4b1c80dad7e78a8cb4" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>move_voltage</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1af5ff68faf5c3be85c507f9c4121aac60" prot="private" virt="non-virtual"><scope>pros::v5::Motor</scope><name>operator+=</name></member>
      <member refid="group__cpp-motors_1gaf5ff68faf5c3be85c507f9c4121aac60" prot="public" virt="non-virtual" ambiguityscope="pros::v5::Motor_Group::"><scope>pros::v5::Motor</scope><name>operator+=</name></member>
      <member refid="classpros_1_1v5_1_1Motor_1ad338fa6ea2f37d45d57763b176963445" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>operator=</name></member>
      <member refid="group__cpp-motors_1gad338fa6ea2f37d45d57763b176963445" prot="public" virt="non-virtual" ambiguityscope="pros::v5::Motor_Group::"><scope>pros::v5::Motor</scope><name>operator=</name></member>
      <member refid="group__cpp-motors_1ga262ad52ba7c6082865f7ff8c0a10d0fd" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_brake_mode</name></member>
      <member refid="group__cpp-motors_1gab0421c060ac8e6c1b1b2b70e28511619" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_brake_mode</name></member>
      <member refid="group__cpp-motors_1gacea9318adbdbb68bf859df3b5adb9cb9" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_current_limit</name></member>
      <member refid="group__cpp-motors_1ga5ea3c179e719829ac409d0534562e2c0" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_encoder_units</name></member>
      <member refid="group__cpp-motors_1ga6d847c917f2994c4b69e73bcc6128b98" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_encoder_units</name></member>
      <member refid="group__cpp-motors_1gaac4bfa684e62972fc894b40e7722252c" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_gearing</name></member>
      <member refid="group__cpp-motors_1gaa4b40010d01a3c38e0c0700512160d68" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_gearing</name></member>
      <member refid="group__cpp-motors_1ga024087665358ab9631f66de754176be4" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_reversed</name></member>
      <member refid="group__cpp-motors_1gadbaeb8d34a1601a119e9d531440951a5" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_voltage_limit</name></member>
      <member refid="group__cpp-motors_1ga5a4a9f0564cf6573848fed77e433a751" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>set_zero_position</name></member>
      <member refid="group__cpp-motors_1gaea6e734c75989d4f96734d5c70d39d5b" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>size</name></member>
      <member refid="group__cpp-motors_1ga0555bbf0702e28db96a4e0e796898f20" prot="public" virt="non-virtual"><scope>pros::v5::Motor</scope><name>tare_position</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
