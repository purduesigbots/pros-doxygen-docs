<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="vision" kind="page">
    <compoundname>vision</compoundname>
    <title>Vision Sensor</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>For a full list of functions for interacting with the V5 Vision Sensor, see its <ref refid="group__c-vision" kindref="compound">C API</ref> and <ref refid="group__cpp-vision" kindref="compound">C++ API</ref>.</para>
</simplesect>
</para>
<sect2 id="vision_1autotoc_md63">
<title>Setting Signatures</title>
<para>The first step to using the vision sensor is setting color signatures for the sensor to recognize as objects. This is done through the V5 Vision Utility program.</para>
</sect2>
<sect2 id="vision_1autotoc_md64">
<title>Retrieving Objects</title>
<para>The primary function of the vision sensor is returning objects, or blobs of color detected by the sensor. The characteristics of an object are defined in <ulink url="../../api/c/vision.html#vision_object_s_t">vision_object_s_t</ulink>.</para>
<sect3 id="vision_1autotoc_md65">
<title>By Size</title>
<para>The simplest way to interact with the vision sensor is to get an object by its size. 0 is the largest object detected by the sensor.</para>
</sect3>
<sect3 id="vision_1autotoc_md66">
<title>By Signature</title>
<para>If you have multiple signatures saved to the vision signature, you will most likely want to only look for objects of a particular signature. The <computeroutput>get_by_sig()</computeroutput> function implements this functionality.</para>
</sect3>
</sect2>
<sect2 id="vision_1autotoc_md67">
<title>Changing the Object Coordinates</title>
<para>Each returned object from the vision sensor comes with a set of coordinates telling where the object was found in the vision sensor&apos;s field of view. The default behavior is to return the coordinates as a function of distance from the top left corner of the field of view - so positive y is downward and positive x is right. With the PROS API, you can change this behavior so that the center of the Field Of View is the (0,0) point for object coordinates. Positive y is still downward and positive x is still right, but negative y is upward of center and negative x is left of center in this configuration.</para>
</sect2>
<sect2 id="vision_1autotoc_md68">
<title>Exposure Setting</title>
<para>In PROS Kernel 3.1.4 and earlier, the vision sensor exposure parameter was in the range [0,58]. In PROS Kernel 3.1.5 and newer, the parameter is scaled to be in the range [0,150] to match the Vision Sensor utility. As a result, there is a loss of information in this translation since multiple integers on the scale [0,150] map to the scale [0,58]. </para>
</sect2>
    </detaileddescription>
  </compounddef>
</doxygen>
