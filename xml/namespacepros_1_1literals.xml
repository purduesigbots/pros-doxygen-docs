<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepros_1_1literals" kind="namespace" language="C++">
    <compoundname>pros::literals</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepros_1_1literals_1a1a9e53fd8b6ee7c665f6eb048129f7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1Serial" kindref="compound">pros::Serial</ref></type>
        <definition>const pros::Serial pros::literals::operator&quot;&quot;_ser</definition>
        <argsstring>(const unsigned long long int m)</argsstring>
        <name>operator&quot;&quot;_ser</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1Serial" kindref="compound">Serial</ref> device from a litteral ending in _ser. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1Serial" kindref="compound">pros::Serial</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Serial<sp/>serial<sp/>=<sp/>2_ser;<sp/>//Makes<sp/>an<sp/>Serial<sp/>device<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/serial.hpp" line="341" column="20" declfile="pros/serial.hpp" declline="341" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1literals_1a23c29633a522df33236bc165afeb4b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Vision" kindref="compound">pros::Vision</ref></type>
        <definition>const pros::Vision pros::literals::operator&quot;&quot;_vis</definition>
        <argsstring>(const unsigned long long int m)</argsstring>
        <name>operator&quot;&quot;_vis</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Vision" kindref="compound">Vision</ref> sensor from a litteral ending in _vis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Vision" kindref="compound">pros::Vision</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Vision<sp/>vision<sp/>=<sp/>2_vis;<sp/>//Makes<sp/>an<sp/>Vision<sp/>sensor<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/vision.hpp" line="784" column="20" declfile="pros/vision.hpp" declline="784" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pros/serial.hpp" line="327" column="18"/>
  </compounddef>
</doxygen>
