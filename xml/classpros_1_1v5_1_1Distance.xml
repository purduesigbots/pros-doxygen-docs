<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1v5_1_1Distance" kind="class" language="C++" prot="public">
    <compoundname>pros::v5::Distance</compoundname>
    <basecompoundref refid="classpros_1_1v5_1_1Device" prot="public" virt="non-virtual">Device</basecompoundref>
    <includes refid="distance_8hpp" local="yes">distance.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__cpp-distance_1gacbdaad211add7384715740d88fda622b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Distance</definition>
        <argsstring>(const std::uint8_t port)</argsstring>
        <name>Distance</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor object for the given port. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-distance_1gab0a3957a7a1e019671cc14fd4960663a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the currently measured distance from the sensor in mm. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The distance value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="66" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-distance_1ga4d31d7f4266e2f4d929c80fcfd285a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_confidence</definition>
        <argsstring>()</argsstring>
        <name>get_confidence</name>
        <briefdescription>
<para>Get the confidence in the distance reading. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a value that has a range of 0 to 63. 63 means high confidence, lower values imply less confidence. Confidence is only available when distance is &gt; 200mm.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The confidence value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="83" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-distance_1gabcac5325a1d8014ce878f1520800b5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_object_size</definition>
        <argsstring>()</argsstring>
        <name>get_object_size</name>
        <briefdescription>
<para>Get the current guess at relative object size. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a value that has a range of 0 to 400. A 18&quot; x 30&quot; grey card will return a value of approximately 75 in typical room lighting.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The size value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="100" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-distance_1gaffb975fa101c38c7e802bbf53242cdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double get_object_velocity</definition>
        <argsstring>()</argsstring>
        <name>get_object_velocity</name>
        <briefdescription>
<para>Get the object velocity in m/s. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The velocity value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="113" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="group__cpp-distance_1ga0d0c3b018fe86d78e40d6c77a03d28dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, pros::Distance &amp;distance)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classpros_1_1v5_1_1Distance" kindref="compound">pros::Distance</ref> &amp;</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>This is the overload for the &lt;&lt; operator for printing to streams. </para>
        </briefdescription>
        <detaileddescription>
<para>Prints in format(this below is all in one line with no new line): <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> [port: (port number), distance: (distance), confidence: (confidence), object size: (object size), object velocity: (object velocity)] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="122" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Distance</label>
        <link refid="classpros_1_1v5_1_1Distance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Distance</label>
        <link refid="classpros_1_1v5_1_1Distance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
    </collaborationgraph>
    <location file="pros/distance.hpp" line="36" column="29" bodyfile="pros/distance.hpp" bodystart="36" bodyend="126"/>
    <listofallmembers>
      <member refid="classpros_1_1v5_1_1Device_1a8176a1cb598ccc924caa19a6d669b396" prot="public" virt="non-virtual"><scope>pros::v5::Distance</scope><name>Device</name></member>
      <member refid="group__cpp-distance_1gacbdaad211add7384715740d88fda622b" prot="public" virt="non-virtual"><scope>pros::v5::Distance</scope><name>Distance</name></member>
      <member refid="group__cpp-distance_1gab0a3957a7a1e019671cc14fd4960663a" prot="public" virt="virtual"><scope>pros::v5::Distance</scope><name>get</name></member>
      <member refid="group__cpp-distance_1ga4d31d7f4266e2f4d929c80fcfd285a98" prot="public" virt="virtual"><scope>pros::v5::Distance</scope><name>get_confidence</name></member>
      <member refid="group__cpp-distance_1gabcac5325a1d8014ce878f1520800b5dd" prot="public" virt="virtual"><scope>pros::v5::Distance</scope><name>get_object_size</name></member>
      <member refid="group__cpp-distance_1gaffb975fa101c38c7e802bbf53242cdee" prot="public" virt="virtual"><scope>pros::v5::Distance</scope><name>get_object_velocity</name></member>
      <member refid="classpros_1_1v5_1_1Device_1ad5b1efc698f196a0d4fd0f795550b703" prot="public" virt="non-virtual"><scope>pros::v5::Distance</scope><name>get_plugged_type</name></member>
      <member refid="classpros_1_1v5_1_1Device_1a33b5263b936248a074f77f1b5ec4fa45" prot="public" virt="non-virtual"><scope>pros::v5::Distance</scope><name>get_port</name></member>
      <member refid="classpros_1_1v5_1_1Device_1aaf5448d59f0bc980c4490e97964cfb42" prot="public" virt="virtual"><scope>pros::v5::Distance</scope><name>is_installed</name></member>
      <member refid="group__cpp-distance_1ga0d0c3b018fe86d78e40d6c77a03d28dc" prot="public" virt="non-virtual"><scope>pros::v5::Distance</scope><name>operator&lt;&lt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
