<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="misc_8hpp" kind="file" language="C++">
    <compoundname>misc.hpp</compoundname>
    <includes refid="misc_8h" local="yes">pros/misc.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">string</includes>
    <includedby refid="api_8h" local="yes">api.h</includedby>
    <includedby refid="device_8hpp" local="yes">pros/device.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>pros/misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="1">
        <label>pros/misc.hpp</label>
        <link refid="misc_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>kapi.h</label>
        <link refid="kapi_8h"/>
      </node>
      <node id="8">
        <label>pros/distance.hpp</label>
        <link refid="distance_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pros/api_legacy.h</label>
        <link refid="api__legacy_8h"/>
      </node>
      <node id="4">
        <label>pros/apix.h</label>
        <link refid="apix_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pros/gps.hpp</label>
        <link refid="gps_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pros/link.hpp</label>
        <link refid="link_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pros/serial.hpp</label>
        <link refid="serial_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>pros/optical.hpp</label>
        <link refid="optical_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>pros/rotation.hpp</label>
        <link refid="rotation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>api.h</label>
        <link refid="api_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pros/motors.hpp</label>
        <link refid="motors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pros/imu.hpp</label>
        <link refid="imu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>main.h</label>
        <link refid="main_8h"/>
      </node>
      <node id="7">
        <label>pros/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>pros/misc.hpp</label>
        <link refid="misc_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpros_1_1v5_1_1Controller" prot="public">pros::v5::Controller</innerclass>
    <innernamespace refid="namespacepros">pros</innernamespace>
    <innernamespace refid="namespacepros_1_1v5">pros::v5</innernamespace>
    <innernamespace refid="namespacepros_1_1battery">pros::battery</innernamespace>
    <innernamespace refid="namespacepros_1_1competition">pros::competition</innernamespace>
    <innernamespace refid="namespacepros_1_1usd">pros::usd</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacepros_1ad258d4c51629346fceac4679b3209ad9" prot="public" static="no" strong="yes">
        <type></type>
        <name>DeviceType</name>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a59417166c47f7e6b70d1a6701bf4efdd" prot="public">
          <name>motor</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9aa5c02a3b57a78ef78fbca4f650029323" prot="public">
          <name>rotation</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a2ba0b99abec8c19b66d7d036b19999ae" prot="public">
          <name>imu</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9aa74ec9c5b6882f79e32a8fbd8da90c1b" prot="public">
          <name>distance</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9aa398fb77df76e6153df57cd65fd0a7c5" prot="public">
          <name>radio</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9af42087059b37ae7f4d9f0d3a475801a8" prot="public">
          <name>vision</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9ac46335eb267e2e1cde5b017acb4cd799" prot="public">
          <name>adi</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a4313277ed1d56c552d84008ff59b3d64" prot="public">
          <name>optical</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a11648e4e66e7ed6a86cb7f1d0cf604fe" prot="public">
          <name>gps</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a74136b24217cb75599440e6e1d807cf7" prot="public">
          <name>serial</name>
          <initializer>= 129</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9aa13693d336f223791f476fd1efd95491" prot="public">
          <name>__attribute__</name>
          <initializer>=((deprecated(&quot;use E_DEVICE_SERIAL instead&quot;))) = serial</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacepros_1ad258d4c51629346fceac4679b3209ad9a5e543256c480ac577d30f76f9120eb74" prot="public">
          <name>undefined</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="350" column="22" bodyfile="pros/misc.hpp" bodystart="350" bodyend="364"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__cpp-misc_1ga42876357c2ed5a047a535aca84f4458e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::battery::get_capacity</definition>
        <argsstring>(void)</argsstring>
        <name>get_capacity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current voltage of the battery, as reported by VEXos. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para>
<para><simplesect kind="return"><para>The current voltage of the battery </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="291" column="8" declfile="pros/misc.hpp" declline="291" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-misc_1gad0f092e6341126d68ae15d41b5dba352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::battery::get_current</definition>
        <argsstring>(void)</argsstring>
        <name>get_current</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current current of the battery in milliamps, as reported by VEXos. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para>
<para><simplesect kind="return"><para>The current current of the battery </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="302" column="9" declfile="pros/misc.hpp" declline="302" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-misc_1ga33d1a503808ed06148a1884e3ccf88ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::battery::get_temperature</definition>
        <argsstring>(void)</argsstring>
        <name>get_temperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current temperature of the battery, as reported by VEXos. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para>
<para><simplesect kind="return"><para>The current temperature of the battery </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="313" column="8" declfile="pros/misc.hpp" declline="313" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-misc_1ga2c325b346f66c15ca7e5a844a66b20d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::battery::get_voltage</definition>
        <argsstring>(void)</argsstring>
        <name>get_voltage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the current capacity of the battery in millivolts, as reported by VEXos. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the battery port.</para>
<para><simplesect kind="return"><para>The current capacity of the battery </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="324" column="9" declfile="pros/misc.hpp" declline="324" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1competition_1ad75e0e06e0817959c08798358eaa8ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::competition::get_status</definition>
        <argsstring>(void)</argsstring>
        <name>get_status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current status of the competition control. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The competition control status as a mask of bits with COMPETITION_{ENABLED,AUTONOMOUS,CONNECTED}. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="335" column="14" declfile="pros/misc.hpp" declline="335" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1competition_1a88353a4f8e5e283558ee6504c54283af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::competition::is_autonomous</definition>
        <argsstring>(void)</argsstring>
        <name>is_autonomous</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="336" column="14" declfile="pros/misc.hpp" declline="336" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1competition_1aaf36367a2369390657f6bc4285f68c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::competition::is_connected</definition>
        <argsstring>(void)</argsstring>
        <name>is_connected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="337" column="14" declfile="pros/misc.hpp" declline="337" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1competition_1a2d4f4555af4c45f7f82ea75e1223899b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::competition::is_disabled</definition>
        <argsstring>(void)</argsstring>
        <name>is_disabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="338" column="14" declfile="pros/misc.hpp" declline="338" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1usd_1a2d7eecbe50533c0d753e82470dc2e6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::usd::is_installed</definition>
        <argsstring>(void)</argsstring>
        <name>is_installed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks if the SD card is installed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if the SD card is installed, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/misc.hpp" line="347" column="14" declfile="pros/misc.hpp" declline="347" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Contains prototypes for miscellaneous functions pertaining to the controller, battery, and competition control.</para>
<para>Visit <ulink url="https://pros.cs.purdue.edu/v5/tutorials/topical/controller.html">https://pros.cs.purdue.edu/v5/tutorials/topical/controller.html</ulink> to learn more.</para>
<para>This file should not be modified by users, since it gets replaced whenever a kernel upgrade occurs.</para>
<para><simplesect kind="copyright"><para>(c) 2017-2023, Purdue University ACM SIGBots. All rights reservered.</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>
    </detaileddescription>
    <location file="pros/misc.hpp"/>
  </compounddef>
</doxygen>
