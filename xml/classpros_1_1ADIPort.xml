<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1ADIPort" kind="class" language="C++" prot="public">
    <compoundname>pros::ADIPort</compoundname>
    <derivedcompoundref refid="classpros_1_1ADIAnalogIn" prot="private" virt="non-virtual">ADIAnalogIn</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIAnalogOut" prot="private" virt="non-virtual">ADIAnalogOut</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIDigitalIn" prot="private" virt="non-virtual">ADIDigitalIn</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIDigitalOut" prot="private" virt="non-virtual">ADIDigitalOut</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIEncoder" prot="private" virt="non-virtual">ADIEncoder</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIGyro" prot="private" virt="non-virtual">ADIGyro</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIMotor" prot="private" virt="non-virtual">ADIMotor</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIUltrasonic" prot="private" virt="non-virtual">ADIUltrasonic</derivedcompoundref>
    <includes refid="adi_8hpp" local="yes">adi.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpros_1_1ADIPort_1a2a4644e4affb8999f17caa38625b3bf5" prot="private" static="no" mutable="no">
        <type>std::uint8_t</type>
        <definition>std::uint8_t _port</definition>
        <argsstring></argsstring>
        <name>_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="85" column="14" bodyfile="pros/adi.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1ADIPort_1a93fbedbd6043a2dcf942b619cb320d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADIPort</definition>
        <argsstring>(std::uint8_t port, adi_port_config_e_t type=E_ADI_TYPE_UNDEFINED)</argsstring>
        <name>ADIPort</name>
        <param>
          <type>std::uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>adi_port_config_e_t</type>
          <declname>type</declname>
          <defval><ref refid="namespacepros_1ad5f9ddf0fd9de73c4b23fa5485144b7fa37e9d6ebc03d88c58db1904a7f2b7373" kindref="member">E_ADI_TYPE_UNDEFINED</ref></defval>
        </param>
        <briefdescription>
<para>Configures an ADI port to act as a given sensor type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of ADI Ports</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1ac1be9086348254b37701ba3a8cff5185" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ADIPort</definition>
        <argsstring>(void)=default</argsstring>
        <name>~ADIPort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1af9e490a9dbcb360966679044d2bcbb4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t get_config</definition>
        <argsstring>(void) const</argsstring>
        <name>get_config</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the configuration for the given ADI port. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ADI configuration for the given port </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="49" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1abd4f519da6ff7ea91ef0d9a55082e2c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t get_value</definition>
        <argsstring>(void) const</argsstring>
        <name>get_value</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the value for the given ADI port. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value stored for the given port </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="56" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1ae1418e3d7d46f72ea805789d6e511c50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t set_config</definition>
        <argsstring>(adi_port_config_e_t type) const</argsstring>
        <name>set_config</name>
        <param>
          <type>adi_port_config_e_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Configures an ADI port to act as a given sensor type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="67" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1a833ed782b711495035dae08cfce3e62e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t set_value</definition>
        <argsstring>(std::int32_t value) const</argsstring>
        <name>set_value</name>
        <param>
          <type>std::int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value for the given ADI port. </para>
        </briefdescription>
        <detaileddescription>
<para>This only works on ports configured as outputs, and the behavior will change depending on the configuration of the port.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the ADI port to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="81" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpros_1_1ADIPort_1ae8723c9ea7bc0905083dd225ee1ed003" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADIPort</definition>
        <argsstring>(void)</argsstring>
        <name>ADIPort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>ADIGyro</label>
        <link refid="classpros_1_1ADIGyro"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
      <node id="2">
        <label>ADIAnalogIn</label>
        <link refid="classpros_1_1ADIAnalogIn"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>ADIUltrasonic</label>
        <link refid="classpros_1_1ADIUltrasonic"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ADIAnalogOut</label>
        <link refid="classpros_1_1ADIAnalogOut"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>ADIEncoder</label>
        <link refid="classpros_1_1ADIEncoder"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>ADIMotor</label>
        <link refid="classpros_1_1ADIMotor"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>ADIDigitalOut</label>
        <link refid="classpros_1_1ADIDigitalOut"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ADIDigitalIn</label>
        <link refid="classpros_1_1ADIDigitalIn"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pros/adi.hpp" line="26" column="14" bodyfile="pros/adi.hpp" bodystart="26" bodyend="86"/>
    <listofallmembers>
      <member refid="classpros_1_1ADIPort_1a2a4644e4affb8999f17caa38625b3bf5" prot="private" virt="non-virtual"><scope>pros::ADIPort</scope><name>_port</name></member>
      <member refid="classpros_1_1ADIPort_1a93fbedbd6043a2dcf942b619cb320d96" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1ae8723c9ea7bc0905083dd225ee1ed003" prot="private" virt="non-virtual"><scope>pros::ADIPort</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1af9e490a9dbcb360966679044d2bcbb4e" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>get_config</name></member>
      <member refid="classpros_1_1ADIPort_1abd4f519da6ff7ea91ef0d9a55082e2c7" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>get_value</name></member>
      <member refid="classpros_1_1ADIPort_1ae1418e3d7d46f72ea805789d6e511c50" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>set_config</name></member>
      <member refid="classpros_1_1ADIPort_1a833ed782b711495035dae08cfce3e62e" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>set_value</name></member>
      <member refid="classpros_1_1ADIPort_1ac1be9086348254b37701ba3a8cff5185" prot="public" virt="virtual"><scope>pros::ADIPort</scope><name>~ADIPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
