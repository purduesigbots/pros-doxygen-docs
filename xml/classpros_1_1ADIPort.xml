<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classpros_1_1ADIPort" kind="class" language="C++" prot="public">
    <compoundname>pros::ADIPort</compoundname>
    <derivedcompoundref refid="classpros_1_1ADIAnalogIn" prot="private" virt="non-virtual">pros::ADIAnalogIn</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIAnalogOut" prot="private" virt="non-virtual">pros::ADIAnalogOut</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIDigitalIn" prot="private" virt="non-virtual">pros::ADIDigitalIn</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIDigitalOut" prot="private" virt="non-virtual">pros::ADIDigitalOut</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIEncoder" prot="private" virt="non-virtual">pros::ADIEncoder</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIGyro" prot="private" virt="non-virtual">pros::ADIGyro</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIMotor" prot="private" virt="non-virtual">pros::ADIMotor</derivedcompoundref>
    <derivedcompoundref refid="classpros_1_1ADIUltrasonic" prot="private" virt="non-virtual">pros::ADIUltrasonic</derivedcompoundref>
    <includes refid="adi_8hpp" local="no">adi.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpros_1_1ADIPort_1a75f3b6c1ae3c1f6b755e18444e7559d6" prot="protected" static="no" mutable="no">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::ADIPort::_port</definition>
        <argsstring></argsstring>
        <name>_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="85" column="1" bodyfile="pros/include/pros/adi.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1ADIPort_1ab6ef7710de366895859d770ffb1d8cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pros::ADIPort::ADIPort</definition>
        <argsstring>(std::uint8_t port, adi_port_config_e_t type=E_ADI_TYPE_UNDEFINED)</argsstring>
        <name>ADIPort</name>
        <param>
          <type>std::uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="adi_8h_1a4efff81399e823764aa05cd5c172ea55" kindref="member">adi_port_config_e_t</ref></type>
          <declname>type</declname>
          <defval><ref refid="adi_8h_1ad5f9ddf0fd9de73c4b23fa5485144b7fa37e9d6ebc03d88c58db1904a7f2b7373" kindref="member">E_ADI_TYPE_UNDEFINED</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures an ADI port to act as a given sensor type.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of ADI Ports</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1ae6a3753c05e008992e6eff5e8c927e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual pros::ADIPort::~ADIPort</definition>
        <argsstring>(void)=default</argsstring>
        <name>~ADIPort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1a1227bc815b12d2789cb78f6d3dcaf37b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIPort::get_config</definition>
        <argsstring>(void) const</argsstring>
        <name>get_config</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the configuration for the given ADI port.</para><para><simplesect kind="return"><para>The ADI configuration for the given port </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1ac79b5fd3ce67ae6ffc4b1fbbb306e997" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIPort::get_value</definition>
        <argsstring>(void) const</argsstring>
        <name>get_value</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value for the given ADI port.</para><para><simplesect kind="return"><para>The value stored for the given port </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1abd86653eebbc34b863ace81839f7e40c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIPort::set_config</definition>
        <argsstring>(adi_port_config_e_t type) const</argsstring>
        <name>set_config</name>
        <param>
          <type><ref refid="adi_8h_1a4efff81399e823764aa05cd5c172ea55" kindref="member">adi_port_config_e_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures an ADI port to act as a given sensor type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIPort_1ae6711117fbceb3bb6e3602c4ef63aff1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIPort::set_value</definition>
        <argsstring>(std::int32_t value) const</argsstring>
        <name>set_value</name>
        <param>
          <type>std::int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value for the given ADI port.</para><para>This only works on ports configured as outputs, and the behavior will change depending on the configuration of the port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the ADI port to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="81" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classpros_1_1ADIPort_1a7f44b44ce0528ea4c5ef83ed8465e72d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pros::ADIPort::ADIPort</definition>
        <argsstring>(void)</argsstring>
        <name>ADIPort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="36">
        <label>pros::ADIUltrasonic</label>
        <link refid="classpros_1_1ADIUltrasonic"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>pros::ADIEncoder</label>
        <link refid="classpros_1_1ADIEncoder"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>pros::ADIMotor</label>
        <link refid="classpros_1_1ADIMotor"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>pros::ADIGyro</label>
        <link refid="classpros_1_1ADIGyro"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>pros::ADIAnalogOut</label>
        <link refid="classpros_1_1ADIAnalogOut"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>pros::ADIDigitalIn</label>
        <link refid="classpros_1_1ADIDigitalIn"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>pros::ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
      <node id="29">
        <label>pros::ADIAnalogIn</label>
        <link refid="classpros_1_1ADIAnalogIn"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>pros::ADIDigitalOut</label>
        <link refid="classpros_1_1ADIDigitalOut"/>
        <childnode refid="28" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pros/include/pros/adi.hpp" line="26" column="1" bodyfile="pros/include/pros/adi.hpp" bodystart="26" bodyend="86"/>
    <listofallmembers>
      <member refid="classpros_1_1ADIPort_1a75f3b6c1ae3c1f6b755e18444e7559d6" prot="protected" virt="non-virtual"><scope>pros::ADIPort</scope><name>_port</name></member>
      <member refid="classpros_1_1ADIPort_1ab6ef7710de366895859d770ffb1d8cf1" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1a7f44b44ce0528ea4c5ef83ed8465e72d" prot="protected" virt="non-virtual"><scope>pros::ADIPort</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1a1227bc815b12d2789cb78f6d3dcaf37b" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>get_config</name></member>
      <member refid="classpros_1_1ADIPort_1ac79b5fd3ce67ae6ffc4b1fbbb306e997" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>get_value</name></member>
      <member refid="classpros_1_1ADIPort_1abd86653eebbc34b863ace81839f7e40c" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>set_config</name></member>
      <member refid="classpros_1_1ADIPort_1ae6711117fbceb3bb6e3602c4ef63aff1" prot="public" virt="non-virtual"><scope>pros::ADIPort</scope><name>set_value</name></member>
      <member refid="classpros_1_1ADIPort_1ae6a3753c05e008992e6eff5e8c927e46" prot="public" virt="virtual"><scope>pros::ADIPort</scope><name>~ADIPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
