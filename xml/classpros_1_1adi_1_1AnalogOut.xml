<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1adi_1_1AnalogOut" kind="class" language="C++" prot="public">
    <compoundname>pros::adi::AnalogOut</compoundname>
    <basecompoundref refid="classpros_1_1adi_1_1Port" prot="private" virt="non-virtual">Port</basecompoundref>
    <includes refid="adi_8hpp" local="yes">adi.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1adi_1_1AnalogOut_1ab7d03537eb962b32db90ac968fa28562" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>AnalogOut</definition>
        <argsstring>(std::uint8_t adi_port)</argsstring>
        <name>AnalogOut</name>
        <param>
          <type>std::uint8_t</type>
          <declname>adi_port</declname>
        </param>
        <briefdescription>
<para>Configures an ADI port to act as an Analog Output. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, &apos;a&apos;-&apos;h&apos;, or &apos;A&apos;-&apos;H&apos;; smart port: 1-21).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adi_port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>ANALOG_SENSOR_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::AnalogOut<sp/>sensor<sp/>(ANALOG_SENSOR_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Use<sp/>the<sp/>sensor</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="425" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1adi_1_1AnalogOut_1a4d631a179c67046d169b2c113bb462d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AnalogOut</definition>
        <argsstring>(ext_adi_port_pair_t port_pair)</argsstring>
        <name>AnalogOut</name>
        <param>
          <type><ref refid="namespacepros_1_1adi_1a9b3fd3c73f06b023b3f9f819e1cd29f3" kindref="member">ext_adi_port_pair_t</ref></type>
          <declname>port_pair</declname>
        </param>
        <briefdescription>
<para>Configures an ADI port on an adi_expander to act as an Analog Output. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, &apos;a&apos;-&apos;h&apos;, or &apos;A&apos;-&apos;H&apos;; smart port: 1-21).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port_pair</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair of the smart port number (from 1-22) and the ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>EXT_ADI_SMART_PORT<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ADI_PORT<sp/>&apos;a&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::AnalogOut<sp/>sensor<sp/>({{EXT_ADI_SMART_PORT,<sp/>ADI_PORT}});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Use<sp/>the<sp/>sensor</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1adi_1_1AnalogOut_1a833ed782b711495035dae08cfce3e62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t set_value</definition>
        <argsstring>(std::int32_t value) const</argsstring>
        <name>set_value</name>
        <param>
          <type>std::int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the output for the Analog Output from 0 (0V) to 4095 (5V). </para>
        </briefdescription>
        <detaileddescription>
<para>Inherited from ADIPort::set_value.</para>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the ADI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the ADI port to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>ANALOG_SENSOR_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pros::AnalogOut<sp/>sensor<sp/>(ANALOG_SENSOR_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>sensor.set_value(4095);<sp/>//<sp/>Set<sp/>the<sp/>port<sp/>to<sp/>5V</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="476" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>AnalogOut</label>
        <link refid="classpros_1_1adi_1_1AnalogOut"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Port</label>
        <link refid="classpros_1_1adi_1_1Port"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>AnalogOut</label>
        <link refid="classpros_1_1adi_1_1AnalogOut"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Port</label>
        <link refid="classpros_1_1adi_1_1Port"/>
      </node>
    </collaborationgraph>
    <location file="pros/adi.hpp" line="402" column="29" bodyfile="pros/adi.hpp" bodystart="402" bodyend="477"/>
    <listofallmembers>
      <member refid="classpros_1_1adi_1_1AnalogOut_1ab7d03537eb962b32db90ac968fa28562" prot="public" virt="non-virtual"><scope>pros::adi::AnalogOut</scope><name>AnalogOut</name></member>
      <member refid="classpros_1_1adi_1_1AnalogOut_1a4d631a179c67046d169b2c113bb462d5" prot="public" virt="non-virtual"><scope>pros::adi::AnalogOut</scope><name>AnalogOut</name></member>
      <member refid="classpros_1_1adi_1_1AnalogOut_1a833ed782b711495035dae08cfce3e62e" prot="public" virt="non-virtual"><scope>pros::adi::AnalogOut</scope><name>set_value</name></member>
      <member refid="classpros_1_1adi_1_1Port_1a833ed782b711495035dae08cfce3e62e" prot="private" virt="non-virtual" ambiguityscope="pros::adi::Port::"><scope>pros::adi::AnalogOut</scope><name>set_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
