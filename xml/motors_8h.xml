<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="motors_8h" kind="file" language="C++">
    <compoundname>motors.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="api_8h" local="yes">pros/include/api.h</includedby>
    <includedby refid="motors_8hpp" local="yes">pros/include/pros/motors.hpp</includedby>
    <incdepgraph>
      <node id="235">
        <label>stdbool.h</label>
      </node>
      <node id="236">
        <label>stdint.h</label>
      </node>
      <node id="234">
        <label>pros/include/pros/motors.h</label>
        <link refid="motors_8h"/>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="239">
        <label>pros/include/kapi.h</label>
        <link refid="kapi_8h"/>
      </node>
      <node id="242">
        <label>pros/include/pros/api_legacy.h</label>
        <link refid="api__legacy_8h"/>
      </node>
      <node id="240">
        <label>pros/include/pros/apix.h</label>
        <link refid="apix_8h"/>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>pros/include/api.h</label>
        <link refid="api_8h"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>pros/include/pros/motors.hpp</label>
        <link refid="motors_8hpp"/>
      </node>
      <node id="237">
        <label>pros/include/pros/motors.h</label>
        <link refid="motors_8h"/>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>pros/include/main.h</label>
        <link refid="main_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structmotor__pid__full__s" prot="public">motor_pid_full_s</innerclass>
    <innerclass refid="structmotor__pid__s" prot="public">motor_pid_s</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1" prot="public" static="no">
        <name>motor_fault_e</name>
        <enumvalue id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1aa1763132e678a09c2a2299dcb8ca91f2" prot="public">
          <name>E_MOTOR_FAULT_NO_FAULTS</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1a19697fdb3bda40d671908094d19bb816" prot="public">
          <name>E_MOTOR_FAULT_MOTOR_OVER_TEMP</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1a129793cdd6c08a6df63a4ce690a563e9" prot="public">
          <name>E_MOTOR_FAULT_DRIVER_FAULT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1ad58554131e6fe018bca28e8447e9da19" prot="public">
          <name>E_MOTOR_FAULT_OVER_CURRENT</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1a4261f9f8989960a7aed89cbc8821007c" prot="public">
          <name>E_MOTOR_FAULT_DRV_OVER_CURRENT</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="350" column="1" bodyfile="pros/include/pros/motors.h" bodystart="350" bodyend="356"/>
      </memberdef>
      <memberdef kind="enum" id="motors_8h_1aefb84700279103f329387cdf6cba0d2b" prot="public" static="no">
        <name>motor_flag_e</name>
        <enumvalue id="motors_8h_1aefb84700279103f329387cdf6cba0d2bae402dfe134784f10ef577661e751cf25" prot="public">
          <name>E_MOTOR_FLAGS_NONE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1aefb84700279103f329387cdf6cba0d2bacb8e657551c89b6678660318961f8b6b" prot="public">
          <name>E_MOTOR_FLAGS_BUSY</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1aefb84700279103f329387cdf6cba0d2ba897fee9d51039554c0cda9e061c2a3e0" prot="public">
          <name>E_MOTOR_FLAGS_ZERO_VELOCITY</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1aefb84700279103f329387cdf6cba0d2bab9db9483c159e4bb272015e6507de0ac" prot="public">
          <name>E_MOTOR_FLAGS_ZERO_POSITION</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="399" column="1" bodyfile="pros/include/pros/motors.h" bodystart="399" bodyend="404"/>
      </memberdef>
      <memberdef kind="enum" id="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7" prot="public" static="no">
        <name>motor_brake_mode_e</name>
        <enumvalue id="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7aa2cc502049ad45801c2ce0a4b3d2069e" prot="public">
          <name>E_MOTOR_BRAKE_COAST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7a0ea7e0574d40f6db40525bb6b7aeeba0" prot="public">
          <name>E_MOTOR_BRAKE_BRAKE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7aaa23ffec0b250ce72e7159b8de3d4b8d" prot="public">
          <name>E_MOTOR_BRAKE_HOLD</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7a23e68282557596c84cfecf5e6ec4a023" prot="public">
          <name>E_MOTOR_BRAKE_INVALID</name>
          <initializer>= INT32_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Motor configuration functions. </para>        </briefdescription>
        <detaileddescription>
<para>These functions allow programmers to configure the behavior of motors Indicates the current &apos;brake mode&apos; of a motor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="554" column="1" bodyfile="pros/include/pros/motors.h" bodystart="554" bodyend="559"/>
      </memberdef>
      <memberdef kind="enum" id="motors_8h_1a6d94b540f7c22cc42ba611576350193c" prot="public" static="no">
        <name>motor_encoder_units_e</name>
        <enumvalue id="motors_8h_1a6d94b540f7c22cc42ba611576350193ca3f8b78d1687e80752406e90ca3bd9caf" prot="public">
          <name>E_MOTOR_ENCODER_DEGREES</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6d94b540f7c22cc42ba611576350193ca5ba6e5cdf81faac8a776a8ce3f735285" prot="public">
          <name>E_MOTOR_ENCODER_ROTATIONS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6d94b540f7c22cc42ba611576350193cad1911b04d55f80e665634a2863386e86" prot="public">
          <name>E_MOTOR_ENCODER_COUNTS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a6d94b540f7c22cc42ba611576350193ca4ab7c8effccd17c995a4abaf1fa4663f" prot="public">
          <name>E_MOTOR_ENCODER_INVALID</name>
          <initializer>= INT32_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the units used by the motor encoders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="564" column="1" bodyfile="pros/include/pros/motors.h" bodystart="564" bodyend="572"/>
      </memberdef>
      <memberdef kind="enum" id="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92" prot="public" static="no">
        <name>motor_gearset_e</name>
        <enumvalue id="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92ad1b0135f1d6fde4ee29590836eb1b856" prot="public">
          <name>E_MOTOR_GEARSET_36</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92a95444ef9bee438d4bcfebb0c0a399443" prot="public">
          <name>E_MOTOR_GEARSET_18</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92a33f143e34739e15a553885015455db37" prot="public">
          <name>E_MOTOR_GEARSET_06</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92a934f089388ca6bd6b92df6321dfbe45d" prot="public">
          <name>E_MOTOR_GEARSET_INVALID</name>
          <initializer>= INT32_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the current internal gear ratio of a motor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="577" column="1" bodyfile="pros/include/pros/motors.h" bodystart="577" bodyend="582"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="motors_8h_1a78665db63d19fd4095b841542b8a6113" prot="public" static="no">
        <type>enum <ref refid="motors_8h_1a6a794029fb7c8da16ee9c883b3c5f1d1" kindref="member">motor_fault_e</ref></type>
        <definition>typedef enum motor_fault_e  motor_fault_e_t</definition>
        <argsstring></argsstring>
        <name>motor_fault_e_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1a3533fda394038870e788dfa4f6b60441" prot="public" static="no">
        <type>enum <ref refid="motors_8h_1aefb84700279103f329387cdf6cba0d2b" kindref="member">motor_flag_e</ref></type>
        <definition>typedef enum motor_flag_e  motor_flag_e_t</definition>
        <argsstring></argsstring>
        <name>motor_flag_e_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1aa324a2881696428c9e3684f9ad23a83b" prot="public" static="no">
        <type>enum <ref refid="motors_8h_1abe00508f1ecabf2dad6bf6d8d323fec7" kindref="member">motor_brake_mode_e</ref></type>
        <definition>typedef enum motor_brake_mode_e  motor_brake_mode_e_t</definition>
        <argsstring></argsstring>
        <name>motor_brake_mode_e_t</name>
        <briefdescription>
<para>Motor configuration functions. </para>        </briefdescription>
        <detaileddescription>
<para>These functions allow programmers to configure the behavior of motors Indicates the current &apos;brake mode&apos; of a motor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1a6677ba23760c558fd8b7b4e1e00a6123" prot="public" static="no">
        <type>enum <ref refid="motors_8h_1a6d94b540f7c22cc42ba611576350193c" kindref="member">motor_encoder_units_e</ref></type>
        <definition>typedef enum motor_encoder_units_e  motor_encoder_units_e_t</definition>
        <argsstring></argsstring>
        <name>motor_encoder_units_e_t</name>
        <briefdescription>
<para>Indicates the units used by the motor encoders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1aa2f1c305c998abc3bf8dd1f76fa4da8b" prot="public" static="no">
        <type>enum <ref refid="motors_8h_1a20a5d12701ec52a5c6bde1c3fe14ab92" kindref="member">motor_gearset_e</ref></type>
        <definition>typedef enum motor_gearset_e  motor_gearset_e_t</definition>
        <argsstring></argsstring>
        <name>motor_gearset_e_t</name>
        <briefdescription>
<para>Indicates the current internal gear ratio of a motor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="582" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" prot="public" static="no">
        <type>struct <ref refid="structmotor__pid__full__s" kindref="compound">motor_pid_full_s</ref></type>
        <definition>typedef struct motor_pid_full_s  motor_pid_full_s_t</definition>
        <argsstring></argsstring>
        <name>motor_pid_full_s_t</name>
        <briefdescription>
<para>Holds the information about a Motor&apos;s position or velocity PID controls. </para>        </briefdescription>
        <detaileddescription>
<para>These values are in 4.4 format, meaning that a value of 0x20 represents 2.0, 0x21 represents 2.0625, 0x22 represents 2.125, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="633" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="motors_8h_1ad2e907c8d7ce53c1fd91f1b9801072e3" prot="public" static="no">
        <type>struct <ref refid="structmotor__pid__s" kindref="compound">motor_pid_s</ref></type>
        <definition>typedef struct motor_pid_s  motor_pid_s_t</definition>
        <argsstring></argsstring>
        <name>motor_pid_s_t</name>
        <briefdescription>
<para>Holds just the constants for a Motor&apos;s position or velocity PID controls. </para>        </briefdescription>
        <detaileddescription>
<para>These values are in 4.4 format, meaning that a value of 0x20 represents 2.0, 0x21 represents 2.0625, 0x22 represents 2.125, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="646" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="motors_8h_1a7da9bf1e229e50bfeeaecf026a6d0d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_move</definition>
        <argsstring>(uint8_t port, int32_t voltage)</argsstring>
        <name>motor_move</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>voltage</declname>
        </param>
        <briefdescription>
<para>Motor movement functions. </para>        </briefdescription>
        <detaileddescription>
<para>These functions allow programmers to make motors move Sets the voltage for the motor from -127 to 127.</para><para>This is designed to map easily to the input from the controller&apos;s analog stick for simple opcontrol use. The actual behavior of the motor is analogous to use of <ref refid="motors_8h_1af1b10ae862913214de91501e57303e49" kindref="member">motor_move_voltage()</ref>, or <ref refid="api__legacy_8h_1a59a0d6bd050cd259ad488e68f856ae81" kindref="member">motorSet()</ref> from the PROS 2 API.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor voltage from -127 to 127</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ab70bf4937f1b5cefa15c11c15314c90e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_move_absolute</definition>
        <argsstring>(uint8_t port, const double position, const int32_t velocity)</argsstring>
        <name>motor_move_absolute</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Sets the target absolute position for the motor to move to. </para>        </briefdescription>
        <detaileddescription>
<para>This movement is relative to the position of the motor when initialized or the position when it was most recently reset with <ref refid="motors_8h_1a51584a697483c8c38335f30006acf6de" kindref="member">motor_set_zero_position()</ref>.</para><para><simplesect kind="note"><para>This function simply sets the target for the motor, it does not block program execution until the movement finishes.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute position to move to in the motor&apos;s encoder units </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum allowable velocity for the movement in RPM</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ab4c1ba35d69e8e9b49df0e848fa305d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_move_relative</definition>
        <argsstring>(uint8_t port, const double position, const int32_t velocity)</argsstring>
        <name>motor_move_relative</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Sets the relative target position for the motor to move to. </para>        </briefdescription>
        <detaileddescription>
<para>This movement is relative to the current position of the motor as given in <ref refid="motors_8h_1a0bee0c860e6030d5b65221a39440e745" kindref="member">motor_get_position()</ref>. Providing 10.0 as the position parameter would result in the motor moving clockwise 10 units, no matter what the current position is.</para><para><simplesect kind="note"><para>This function simply sets the target for the motor, it does not block program execution until the movement finishes.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative position to move to in the motor&apos;s encoder units </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum allowable velocity for the movement in RPM</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a5a366399c1ff416002641fd05e6d7808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_move_velocity</definition>
        <argsstring>(uint8_t port, const int32_t velocity)</argsstring>
        <name>motor_move_velocity</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Sets the velocity for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This velocity corresponds to different actual speeds depending on the gearset used for the motor. This results in a range of +-100 for E_MOTOR_GEARSET_36, +-200 for E_MOTOR_GEARSET_18, and +-600 for E_MOTOR_GEARSET_6. The velocity is held with PID to ensure consistent speed, as opposed to setting the motor&apos;s voltage.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor velocity from +-100, +-200, or +-600 depending on the motor&apos;s gearset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1af1b10ae862913214de91501e57303e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_move_voltage</definition>
        <argsstring>(uint8_t port, const int32_t voltage)</argsstring>
        <name>motor_move_voltage</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>voltage</declname>
        </param>
        <briefdescription>
<para>Sets the output voltage for the motor from -12000 to 12000 in millivolts. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>The new voltage value from -12000 to 12000</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a642c93d0481c8ce46cf452b39c2e4b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_modify_profiled_velocity</definition>
        <argsstring>(uint8_t port, const int32_t velocity)</argsstring>
        <name>motor_modify_profiled_velocity</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Changes the output velocity for a profiled movement (motor_move_absolute or motor_move_relative). </para>        </briefdescription>
        <detaileddescription>
<para>This will have no effect if the motor is not following a profiled movement.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor velocity from +-100, +-200, or +-600 depending on the motor&apos;s gearset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a7f8c14929ae19a2a9023f2f8be753ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_target_position</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_target_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the target position set for the motor by the user. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The target position in its encoder units or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a70068f6b23a0300cfab39f4bf0fb3b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_target_velocity</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_target_velocity</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the velocity commanded to the motor by the user. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The commanded motor velocity from +-100, +-200, or +-600, or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ae4d8307b36224766a6d8322ad261047d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_actual_velocity</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_actual_velocity</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Motor telemetry functions. </para>        </briefdescription>
        <detaileddescription>
<para>These functions allow programmers to collect telemetry from motors Gets the actual velocity of the motor.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s actual velocity in RPM or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a0e9c4fa440d6dfde73c48269e461f38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_current_draw</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_current_draw</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the current drawn by the motor in mA. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s current in mA or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1abc263b00bafab31e657c88c84f0eaeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_direction</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_direction</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the direction of movement for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 for moving in the positive direction, -1 for moving in the negative direction, or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1af9297fdfd1b4815d2f382311fdbb28c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_efficiency</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_efficiency</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the efficiency of the motor in percent. </para>        </briefdescription>
        <detaileddescription>
<para>An efficiency of 100% means that the motor is moving electrically while drawing no electrical power, and an efficiency of 0% means that the motor is drawing power but not moving.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s efficiency in percent or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a9ed03089c4ae5ffd265c41c78c1efccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_is_over_current</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_is_over_current</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Checks if the motor is drawing over its current limit. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the motor&apos;s current limit is being exceeded and 0 if the current limit is not exceeded, or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a049a861a7ad84d5cee1f384e0ba170e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_is_over_temp</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_is_over_temp</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Checks if the motor&apos;s temperature is above its limit. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the temperature limit is exceeded and 0 if the the temperature is below the limit, or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ae6137a52481225143d9b4a08cd8514de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_is_stopped</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_is_stopped</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Checks if the motor is stopped. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Although this function forwards data from the motor, the motor presently does not provide any value. This function returns PROS_ERR with errno set to ENOSYS.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the motor is not moving, 0 if the motor is moving, or PROS_ERR if the operation failed, setting errno </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a5e4e2950df1b9f4bace3afdd05af5291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_zero_position_flag</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_zero_position_flag</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Checks if the motor is at its zero position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Although this function forwards data from the motor, the motor presently does not provide any value. This function returns PROS_ERR with errno set to ENOSYS.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the motor is at zero absolute position, 0 if the motor has moved from its absolute zero, or PROS_ERR if the operation failed, setting errno </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a4fd22f7eee8c9672c805b03ad7abc5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t motor_get_faults</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_faults</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the faults experienced by the motor. </para>        </briefdescription>
        <detaileddescription>
<para>Compare this bitfield to the bitmasks in motor_fault_e_t.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitfield containing the motor&apos;s faults. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a2a06711b4bb09f14108ba994184ce066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t motor_get_flags</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_flags</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the flags set by the motor&apos;s operation. </para>        </briefdescription>
        <detaileddescription>
<para>Compare this bitfield to the bitmasks in motor_flag_e_t.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitfield containing the motor&apos;s flags. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ab83ee852fc58267f5ba03956fc11246a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_raw_position</definition>
        <argsstring>(uint8_t port, uint32_t *const timestamp)</argsstring>
        <name>motor_get_raw_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t *const</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Gets the raw encoder count of the motor at a given timestamp. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a time in milliseconds for which the encoder count will be returned. If NULL, the timestamp at which the encoder count was read will not be supplied</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw encoder count at the given timestamp or PROS_ERR if the operation failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a0bee0c860e6030d5b65221a39440e745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_position</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the absolute position of the motor in its encoder units. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s absolute position in its encoder units or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ad47869403be5468eda1ec0af809b4539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_power</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_power</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the power drawn by the motor in Watts. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s power draw in Watts or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a512c12d6d2af3f63e186d300ea20623b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_temperature</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_temperature</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the temperature of the motor in degrees Celsius. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s temperature in degrees Celsius or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a9a6a297b10f6e90c02730a06ed000f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double motor_get_torque</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_torque</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the torque generated by the motor in Newton Meters (Nm). </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s torque in Nm or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1ab688d5f99c514b2e78c6809ef1d7303e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_voltage</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_voltage</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the voltage delivered to the motor in millivolts. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s voltage in mV or PROS_ERR_F if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a51584a697483c8c38335f30006acf6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_zero_position</definition>
        <argsstring>(uint8_t port, const double position)</argsstring>
        <name>motor_set_zero_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Sets the position for the motor in its encoder units. </para>        </briefdescription>
        <detaileddescription>
<para>This will be the future reference point for the motor&apos;s &quot;absolute&quot; position.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The new reference position in its encoder units</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a6fd0b18bb335561dba7e0fdd5b5e571d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_tare_position</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_tare_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Sets the &quot;absolute&quot; zero position of the motor to its current position. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a715f771b51b89b07e8e14f383b50b1de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_brake_mode</definition>
        <argsstring>(uint8_t port, const motor_brake_mode_e_t mode)</argsstring>
        <name>motor_set_brake_mode</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1aa324a2881696428c9e3684f9ad23a83b" kindref="member">motor_brake_mode_e_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_brake_mode_e_t to the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The motor_brake_mode_e_t to set for the motor</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1acee1e0677416e9e4516f4cb24d7f366f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_current_limit</definition>
        <argsstring>(uint8_t port, const int32_t limit)</argsstring>
        <name>motor_set_current_limit</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Sets the current limit for the motor in mA. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The new current limit in mA</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a0b029d715338ee7601a41061af2eb5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_encoder_units</definition>
        <argsstring>(uint8_t port, const motor_encoder_units_e_t units)</argsstring>
        <name>motor_set_encoder_units</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1a6677ba23760c558fd8b7b4e1e00a6123" kindref="member">motor_encoder_units_e_t</ref></type>
          <declname>units</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_encoder_units_e_t for the motor encoder. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>units</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor encoder units</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a5d313d37deadfa7eebe410d064b52354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_gearing</definition>
        <argsstring>(uint8_t port, const motor_gearset_e_t gearset)</argsstring>
        <name>motor_set_gearing</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1aa2f1c305c998abc3bf8dd1f76fa4da8b" kindref="member">motor_gearset_e_t</ref></type>
          <declname>gearset</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_gearset_e_t for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gearset</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor gearset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a7f1c3704af45fe6b1b762589848bc3e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1ad2e907c8d7ce53c1fd91f1b9801072e3" kindref="member">motor_pid_s_t</ref></type>
        <definition>motor_pid_s_t motor_convert_pid</definition>
        <argsstring>(double kf, double kp, double ki, double kd)</argsstring>
        <name>motor_convert_pid</name>
        <param>
          <type>double</type>
          <declname>kf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kd</declname>
        </param>
        <briefdescription>
<para>Takes in floating point values and returns a properly formatted pid struct. </para>        </briefdescription>
        <detaileddescription>
<para>The motor_pid_s_t struct is in 4.4 format, i.e. 0x20 is 2.0, 0x21 is 2.0625, etc. This function will convert the floating point values to the nearest 4.4 value.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kf</parametername>
</parameternamelist>
<parameterdescription>
<para>The feedforward constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>The proportional constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ki</parametername>
</parameternamelist>
<parameterdescription>
<para>The integral constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>The derivative constant</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A motor_pid_s_t struct formatted properly in 4.4. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a9ba5c8f64ceeb1013a58553426f8f526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" kindref="member">motor_pid_full_s_t</ref></type>
        <definition>motor_pid_full_s_t motor_convert_pid_full</definition>
        <argsstring>(double kf, double kp, double ki, double kd, double filter, double limit, double threshold, double loopspeed)</argsstring>
        <name>motor_convert_pid_full</name>
        <param>
          <type>double</type>
          <declname>kf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>double</type>
          <declname>loopspeed</declname>
        </param>
        <briefdescription>
<para>Takes in floating point values and returns a properly formatted pid struct. </para>        </briefdescription>
        <detaileddescription>
<para>The motor_pid_s_t struct is in 4.4 format, i.e. 0x20 is 2.0, 0x21 is 2.0625, etc. This function will convert the floating point values to the nearest 4.4 value.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kf</parametername>
</parameternamelist>
<parameterdescription>
<para>The feedforward constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>The proportional constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ki</parametername>
</parameternamelist>
<parameterdescription>
<para>The integral constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>The derivative constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant used for filtering the profile acceleration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The integral limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold for determining if a position movement has reached its goal. This has no effect for velocity PID calculations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loopspeed</parametername>
</parameternamelist>
<parameterdescription>
<para>The rate at which the PID computation is run in ms</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A motor_pid_s_t struct formatted properly in 4.4. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a389e60d01741d5947a9b7330c6c8bbf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_pos_pid</definition>
        <argsstring>(uint8_t port, const motor_pid_s_t pid)</argsstring>
        <name>motor_set_pos_pid</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1ad2e907c8d7ce53c1fd91f1b9801072e3" kindref="member">motor_pid_s_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_pid_s_t for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This intended to just modify the main PID constants.</para><para>Only non-zero values of the struct will change the existing motor constants.</para><para><simplesect kind="note"><para>This feature is in beta, it is advised to use caution when modifying the PID values. The motor could be damaged by particularly large constants.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor PID constants</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a1d3273573e296507914d2626121f19ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_pos_pid_full</definition>
        <argsstring>(uint8_t port, const motor_pid_full_s_t pid)</argsstring>
        <name>motor_set_pos_pid_full</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" kindref="member">motor_pid_full_s_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_pid_full_s_t for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>Only non-zero values of the struct will change the existing motor constants.</para><para><simplesect kind="note"><para>This feature is in beta, it is advised to use caution when modifying the PID values. The motor could be damaged by particularly large constants.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor PID constants</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a4255880d012ed0ec856f302536755d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_vel_pid</definition>
        <argsstring>(uint8_t port, const motor_pid_s_t pid)</argsstring>
        <name>motor_set_vel_pid</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1ad2e907c8d7ce53c1fd91f1b9801072e3" kindref="member">motor_pid_s_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_pid_s_t for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This intended to just modify the main PID constants.</para><para>Only non-zero values of the struct will change the existing motor constants.</para><para><simplesect kind="note"><para>This feature is in beta, it is advised to use caution when modifying the PID values. The motor could be damaged by particularly large constants.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor PID constants</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1acdec538d8f08e8b5946294f84f017e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_vel_pid_full</definition>
        <argsstring>(uint8_t port, const motor_pid_full_s_t pid)</argsstring>
        <name>motor_set_vel_pid_full</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" kindref="member">motor_pid_full_s_t</ref></type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Sets one of motor_pid_full_s_t for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>Only non-zero values of the struct will change the existing motor constants.</para><para><simplesect kind="note"><para>This feature is in beta, it is advised to use caution when modifying the PID values. The motor could be damaged by particularly large constants.</para></simplesect>
This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The new motor PID constants</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="912" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a3902b2e866601e4b3e30444910ba5cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_reversed</definition>
        <argsstring>(uint8_t port, const bool reverse)</argsstring>
        <name>motor_set_reversed</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
<para>Sets the reverse flag for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This will invert its movements and the values returned for its position.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reverse</parametername>
</parameternamelist>
<parameterdescription>
<para>True reverses the motor, false is default</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a908ff9a818c05af4e485bf01f7761b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_set_voltage_limit</definition>
        <argsstring>(uint8_t port, const int32_t limit)</argsstring>
        <name>motor_set_voltage_limit</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Sets the voltage limit for the motor in Volts. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The new voltage limit in Volts</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1aa71aa22434adea13e08e105440c6f350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1aa324a2881696428c9e3684f9ad23a83b" kindref="member">motor_brake_mode_e_t</ref></type>
        <definition>motor_brake_mode_e_t motor_get_brake_mode</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_brake_mode</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the brake mode that was set for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of motor_brake_mode_e_t, according to what was set for the motor, or E_MOTOR_BRAKE_INVALID if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a76f0807b5f196dad9661f7a674768356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_current_limit</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_current_limit</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the current limit for the motor in mA. </para>        </briefdescription>
        <detaileddescription>
<para>The default value is 2500 mA.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s current limit in mA or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="984" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a999667dd36a74e75f84a2b7c84c8991b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1a6677ba23760c558fd8b7b4e1e00a6123" kindref="member">motor_encoder_units_e_t</ref></type>
        <definition>motor_encoder_units_e_t motor_get_encoder_units</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_encoder_units</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the encoder units that were set for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of motor_encoder_units_e_t according to what is set for the motor or E_MOTOR_ENCODER_INVALID if the operation failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a617d1def39e4bf36892dd5d9202ad77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1aa2f1c305c998abc3bf8dd1f76fa4da8b" kindref="member">motor_gearset_e_t</ref></type>
        <definition>motor_gearset_e_t motor_get_gearing</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_gearing</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the gearset that was set for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One of motor_gearset_e_t according to what is set for the motor, or E_GEARSET_INVALID if the operation failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1016" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a0d26b8dabf8384430a8f5b83238110cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" kindref="member">motor_pid_full_s_t</ref></type>
        <definition>motor_pid_full_s_t motor_get_pos_pid</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_pos_pid</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the position PID that was set for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function will return zero for all of the parameters if the <ref refid="motors_8h_1a389e60d01741d5947a9b7330c6c8bbf7" kindref="member">motor_set_pos_pid()</ref> or <ref refid="motors_8h_1a1d3273573e296507914d2626121f19ce" kindref="member">motor_set_pos_pid_full()</ref> functions have not been used.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para>Additionally, in an error state all values of the returned struct are set to their negative maximum values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A motor_pid_full_s_t containing the position PID constants last set to the given motor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1037" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a978b582b389ac2d9b0d3a1eb4f2f4c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="motors_8h_1a0295cbf49f5c70c17b5fa962bd25febd" kindref="member">motor_pid_full_s_t</ref></type>
        <definition>motor_pid_full_s_t motor_get_vel_pid</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_vel_pid</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the velocity PID that was set for the motor. </para>        </briefdescription>
        <detaileddescription>
<para>This function will return zero for all of the parameters if the <ref refid="motors_8h_1a4255880d012ed0ec856f302536755d8a" kindref="member">motor_set_vel_pid()</ref> or <ref refid="motors_8h_1acdec538d8f08e8b5946294f84f017e8e" kindref="member">motor_set_vel_pid_full()</ref> functions have not been used.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para>Additionally, in an error state all values of the returned struct are set to their negative maximum values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A motor_pid_full_s_t containing the velocity PID constants last set to the given motor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1058" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1aa01f84009a0ed3312696d392818a2cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_is_reversed</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_is_reversed</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the operation direction of the motor as set by the user. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the motor has been reversed and 0 if the motor was not reversed, or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1074" column="1"/>
      </memberdef>
      <memberdef kind="function" id="motors_8h_1a80dc1aba752eda42b9e27e9c27ae8b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t motor_get_voltage_limit</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>motor_get_voltage_limit</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the voltage limit set by the user. </para>        </briefdescription>
        <detaileddescription>
<para>Default value is 0V, which means that there is no software limitation imposed on the voltage.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a motor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The motor&apos;s voltage limit in V or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/motors.h" line="1093" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains prototypes for the V5 Motor-related functions. </para>    </briefdescription>
    <detaileddescription>
<para>Visit <ulink url="https://pros.cs.purdue.edu/v5/tutorials/topical/motors.html">https://pros.cs.purdue.edu/v5/tutorials/topical/motors.html</ulink> to learn more.</para><para>This file should not be modified by users, since it gets replaced whenever a kernel upgrade occurs.</para><para>Copyright (c) 2017-2020, Purdue University ACM SIGBots.</para><para>This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>    </detaileddescription>
    <location file="pros/include/pros/motors.h"/>
  </compounddef>
</doxygen>
