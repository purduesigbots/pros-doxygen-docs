<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1Distance" kind="class" language="C++" prot="public">
    <compoundname>pros::Distance</compoundname>
    <includes refid="distance_8hpp" local="yes">distance.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpros_1_1Distance_1a16b806c98fffb4fd7235419ef22ac101" prot="private" static="no" mutable="no">
        <type>const std::uint8_t</type>
        <definition>const std::uint8_t _port</definition>
        <argsstring></argsstring>
        <name>_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="110" column="20" bodyfile="pros/distance.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1Distance_1acbdaad211add7384715740d88fda622b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Distance</definition>
        <argsstring>(const std::uint8_t port)</argsstring>
        <name>Distance</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor object for the given port. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Distance_1ab0a3957a7a1e019671cc14fd4960663a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the currently measured distance from the sensor in mm. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The distance value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="53" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Distance_1a4d31d7f4266e2f4d929c80fcfd285a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_confidence</definition>
        <argsstring>()</argsstring>
        <name>get_confidence</name>
        <briefdescription>
<para>Get the confidence in the distance reading. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a value that has a range of 0 to 63. 63 means high confidence, lower values imply less confidence. Confidence is only available when distance is &gt; 200mm.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The confidence value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="70" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Distance_1abcac5325a1d8014ce878f1520800b5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_object_size</definition>
        <argsstring>()</argsstring>
        <name>get_object_size</name>
        <briefdescription>
<para>Get the current guess at relative object size. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a value that has a range of 0 to 400. A 18&quot; x 30&quot; grey card will return a value of approximately 75 in typical room lighting.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The size value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="87" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Distance_1affb975fa101c38c7e802bbf53242cdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double get_object_velocity</definition>
        <argsstring>()</argsstring>
        <name>get_object_velocity</name>
        <briefdescription>
<para>Get the object velocity in m/s. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1Distance" kindref="compound">Distance</ref> Sensor</para>
<para><simplesect kind="return"><para>The velocity value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="100" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1Distance_1a43e4da051d60756a274aef413ace8caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t get_port</definition>
        <argsstring>()</argsstring>
        <name>get_port</name>
        <briefdescription>
<para>Gets the port number of the distance sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The distance sensor&apos;s port number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="107" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pros/distance.hpp" line="27" column="15" bodyfile="pros/distance.hpp" bodystart="27" bodyend="111"/>
    <listofallmembers>
      <member refid="classpros_1_1Distance_1a16b806c98fffb4fd7235419ef22ac101" prot="private" virt="non-virtual"><scope>pros::Distance</scope><name>_port</name></member>
      <member refid="classpros_1_1Distance_1acbdaad211add7384715740d88fda622b" prot="public" virt="non-virtual"><scope>pros::Distance</scope><name>Distance</name></member>
      <member refid="classpros_1_1Distance_1ab0a3957a7a1e019671cc14fd4960663a" prot="public" virt="virtual"><scope>pros::Distance</scope><name>get</name></member>
      <member refid="classpros_1_1Distance_1a4d31d7f4266e2f4d929c80fcfd285a98" prot="public" virt="virtual"><scope>pros::Distance</scope><name>get_confidence</name></member>
      <member refid="classpros_1_1Distance_1abcac5325a1d8014ce878f1520800b5dd" prot="public" virt="virtual"><scope>pros::Distance</scope><name>get_object_size</name></member>
      <member refid="classpros_1_1Distance_1affb975fa101c38c7e802bbf53242cdee" prot="public" virt="virtual"><scope>pros::Distance</scope><name>get_object_velocity</name></member>
      <member refid="classpros_1_1Distance_1a43e4da051d60756a274aef413ace8caa" prot="public" virt="non-virtual"><scope>pros::Distance</scope><name>get_port</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
