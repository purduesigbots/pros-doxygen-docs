<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpros_1_1v5_1_1Rotation" kind="class" language="C++" prot="public">
    <compoundname>pros::v5::Rotation</compoundname>
    <basecompoundref refid="classpros_1_1v5_1_1Device" prot="public" virt="non-virtual">Device</basecompoundref>
    <includes refid="rotation_8hpp" local="yes">rotation.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__cpp-rotation_1ga5326b5efff212734e1c45d51234f41b5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Rotation</definition>
        <argsstring>(const std::uint8_t port)</argsstring>
        <name>Rotation</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Reset the current absolute position to be the same as the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor angle.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="42" column="10" bodyfile="pros/rotation.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga8213234d390dd0bb18bcea119d37bd83" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rotation</definition>
        <argsstring>(const std::uint8_t port, const bool reverse_flag)</argsstring>
        <name>Rotation</name>
        <param>
          <type>const std::uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>reverse_flag</declname>
        </param>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Reset the current absolute position to be the same as the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor angle.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1gaf3ac11ae6daec3a4eb247f270a476b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Reset the current absolute position to be the same as the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor angle.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="60" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1gafb4e63f82dffc58b0fb0569f73250ff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_data_rate</definition>
        <argsstring>(std::uint32_t rate) const</argsstring>
        <name>set_data_rate</name>
        <param>
          <type>std::uint32_t</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s refresh interval in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para>The rate may be specified in increments of 5ms, and will be rounded down to the nearest increment. The minimum allowable refresh rate is 5ms. The default rate is 10ms.</para>
<para>As values are copied into the shared memory buffer only at 10ms intervals, setting this value to less than 10ms does not mean that you can poll the sensor&apos;s values any faster. However, it will guarantee that the data is as recent as possible.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>The data refresh interval in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="83" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga78c5a00bae68f7599fab29e6285081f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_position</definition>
        <argsstring>(std::uint32_t position) const</argsstring>
        <name>set_position</name>
        <param>
          <type>std::uint32_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor position reading to a desired rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in terms of ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="98" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga3591329de0d2f370c218eb18a62be21d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reset_position</definition>
        <argsstring>(void) const</argsstring>
        <name>reset_position</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor to a desired rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in terms of ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="113" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga28a657dab4a1609b0bddc8ba0c345b57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_position</definition>
        <argsstring>() const</argsstring>
        <name>get_position</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current position in centidegrees. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>The position value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="126" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1gad10d104607c2d09226d32498b94c4b61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_velocity</definition>
        <argsstring>() const</argsstring>
        <name>get_velocity</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current velocity in centidegrees per second. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value or PROS_ERR_F if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="142" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1gac675e49bc52b4b25ce2351742b69b6cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_angle</definition>
        <argsstring>() const</argsstring>
        <name>get_angle</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s current position in centidegrees. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>The angle value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="155" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1gaf347bbca845f968e4d2d5d79a7e0f860" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t set_reversed</definition>
        <argsstring>(bool value) const</argsstring>
        <name>set_reversed</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s direction reversed flag. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if the direction of the rotational sensor is reversed or not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="172" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga3b118a034ddc4035176610b5d41befd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t reverse</definition>
        <argsstring>() const</argsstring>
        <name>reverse</name>
        <briefdescription>
<para>Reverse the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s direction. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="185" column="22"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-rotation_1ga8b3d525b9f66159815e52229b8106d18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>virtual std::int32_t get_reversed</definition>
        <argsstring>() const</argsstring>
        <name>get_reversed</name>
        <briefdescription>
<para>Get the <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor&apos;s reversed flag. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> Sensor</para>
<para><simplesect kind="return"><para>Reversed value or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="198" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpros_1_1v5_1_1Rotation_1a41d9d3bd2e1cc43344a72d874abe513a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const pros::Rotation &amp;rotation)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">pros::Rotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>This is the overload for the &lt;&lt; operator for printing to streams. </para>
        </briefdescription>
        <detaileddescription>
<para>Prints in format(this below is all in one line with no new line): <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> [port: rotation._port, position: (rotation position), velocity: (rotation velocity), angle: (rotation angle), reversed: (reversed boolean)] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="208" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
      <node id="1">
        <label>Rotation</label>
        <link refid="classpros_1_1v5_1_1Rotation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Device</label>
        <link refid="classpros_1_1v5_1_1Device"/>
      </node>
      <node id="1">
        <label>Rotation</label>
        <link refid="classpros_1_1v5_1_1Rotation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pros/rotation.hpp" line="35" column="29" bodyfile="pros/rotation.hpp" bodystart="35" bodyend="210"/>
    <listofallmembers>
      <member refid="classpros_1_1v5_1_1Device_1a8176a1cb598ccc924caa19a6d669b396" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>Device</name></member>
      <member refid="group__cpp-rotation_1gac675e49bc52b4b25ce2351742b69b6cb" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>get_angle</name></member>
      <member refid="classpros_1_1v5_1_1Device_1ad5b1efc698f196a0d4fd0f795550b703" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>get_plugged_type</name></member>
      <member refid="classpros_1_1v5_1_1Device_1a33b5263b936248a074f77f1b5ec4fa45" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>get_port</name></member>
      <member refid="group__cpp-rotation_1ga28a657dab4a1609b0bddc8ba0c345b57" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>get_position</name></member>
      <member refid="group__cpp-rotation_1ga8b3d525b9f66159815e52229b8106d18" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>get_reversed</name></member>
      <member refid="group__cpp-rotation_1gad10d104607c2d09226d32498b94c4b61" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>get_velocity</name></member>
      <member refid="classpros_1_1v5_1_1Device_1aaf5448d59f0bc980c4490e97964cfb42" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>is_installed</name></member>
      <member refid="classpros_1_1v5_1_1Rotation_1a41d9d3bd2e1cc43344a72d874abe513a" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>operator&lt;&lt;</name></member>
      <member refid="group__cpp-rotation_1gaf3ac11ae6daec3a4eb247f270a476b14" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>reset</name></member>
      <member refid="group__cpp-rotation_1ga3591329de0d2f370c218eb18a62be21d" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>reset_position</name></member>
      <member refid="group__cpp-rotation_1ga3b118a034ddc4035176610b5d41befd1" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>reverse</name></member>
      <member refid="group__cpp-rotation_1ga5326b5efff212734e1c45d51234f41b5" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>Rotation</name></member>
      <member refid="group__cpp-rotation_1ga8213234d390dd0bb18bcea119d37bd83" prot="public" virt="non-virtual"><scope>pros::v5::Rotation</scope><name>Rotation</name></member>
      <member refid="group__cpp-rotation_1gafb4e63f82dffc58b0fb0569f73250ff6" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>set_data_rate</name></member>
      <member refid="group__cpp-rotation_1ga78c5a00bae68f7599fab29e6285081f6" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>set_position</name></member>
      <member refid="group__cpp-rotation_1gaf347bbca845f968e4d2d5d79a7e0f860" prot="public" virt="virtual"><scope>pros::v5::Rotation</scope><name>set_reversed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
