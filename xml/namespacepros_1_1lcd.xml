<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepros_1_1lcd" kind="namespace" language="C++">
    <compoundname>pros::lcd</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacepros_1_1lcd_1a22ffa85cc6287c5c366fe0cb2416e28a" prot="public" static="no">
        <type>void(*)(void)</type>
        <definition>using lcd_btn_cb_fn_t =  void (*)(void)</definition>
        <argsstring></argsstring>
        <name>lcd_btn_cb_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="146" column="1" bodyfile="pros/include/pros/llemu.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepros_1_1lcd_1a867eb9cd989e1c6c31982fe2b5c58dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::is_initialized</definition>
        <argsstring>(void)</argsstring>
        <name>is_initialized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks whether the emulated three-button LCD has already been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the LCD has been initialized or false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="38" column="6" declfile="pros/include/pros/llemu.hpp" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1afb69bfa2fc5da3018b6886f612ed190e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::initialize</definition>
        <argsstring>(void)</argsstring>
        <name>initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates an emulation of the three-button, UART-based VEX LCD on the display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the LCD was successfully initialized, or false if it has already been initialized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="46" column="6" declfile="pros/include/pros/llemu.hpp" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a7aa9a422049011de193f54bce8cc95ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Turns off the Legacy LCD Emulator. </para>
        </briefdescription>
        <detaileddescription>
<para>Calling this function will clear the entire display, and you will not be able to call any further LLEMU functions until another call to lcd_initialize.</para>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first.</para>
<para><simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="61" column="6" declfile="pros/include/pros/llemu.hpp" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1aead67d10b420308d58883135f0d28099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool pros::lcd::print</definition>
        <argsstring>(std::int16_t line, const char *fmt, Params... args)</argsstring>
        <name>print</name>
        <param>
          <type>std::int16_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>Params...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Displays a formatted string on the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line on which to display the text [0-7] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional list of arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="95" column="6" bodyfile="pros/include/pros/llemu.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a515526f1d3069a6aa985512273aa7788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::set_text</definition>
        <argsstring>(std::int16_t line, std::string text)</argsstring>
        <name>set_text</name>
        <param>
          <type>std::int16_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Displays a string on the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line on which to display the text [0-7] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to display</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="115" column="6" declfile="pros/include/pros/llemu.hpp" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a8d22379bd680a36182d51d8e8ef02baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears the contents of the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="128" column="6" declfile="pros/include/pros/llemu.hpp" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1aef44947cea9006f86d4aaa2e32856835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pros::lcd::clear_line</definition>
        <argsstring>(std::int16_t line)</argsstring>
        <name>clear_line</name>
        <param>
          <type>std::int16_t</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Clears the contents of a line of the emulated three-button LCD screen. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The LCD has not been initialized. Call <ref refid="namespacepros_1_1c_1a36a50f90e2186a37abce6cf36d5df6a3" kindref="member">lcd_initialize()</ref> first. EINVAL - The line number specified is not in the range [0-7]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line to clear</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation was successful, or false otherwise, setting errno values as specified above. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="144" column="6" declfile="pros/include/pros/llemu.hpp" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a4d8f5121ac67ae7de816334e7b66f08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pros::lcd::register_btn0_cb</definition>
        <argsstring>(lcd_btn_cb_fn_t cb)</argsstring>
        <name>register_btn0_cb</name>
        <param>
          <type><ref refid="namespacepros_1_1lcd_1a22ffa85cc6287c5c366fe0cb2416e28a" kindref="member">lcd_btn_cb_fn_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers a callback function for the leftmost button. </para>
        </briefdescription>
        <detaileddescription>
<para>When the leftmost button on the emulated three-button LCD is pressed, the user-provided callback function will be invoked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function of type lcd_btn_cb_fn_t(void (*cb)(void)) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="157" column="6" declfile="pros/include/pros/llemu.hpp" declline="157" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a9a3a9342268b8a95d91190ab36574a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pros::lcd::register_btn1_cb</definition>
        <argsstring>(lcd_btn_cb_fn_t cb)</argsstring>
        <name>register_btn1_cb</name>
        <param>
          <type><ref refid="namespacepros_1_1lcd_1a22ffa85cc6287c5c366fe0cb2416e28a" kindref="member">lcd_btn_cb_fn_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers a callback function for the center button. </para>
        </briefdescription>
        <detaileddescription>
<para>When the center button on the emulated three-button LCD is pressed, the user-provided callback function will be invoked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function of type lcd_btn_cb_fn_t(void (*cb)(void)) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="168" column="6" declfile="pros/include/pros/llemu.hpp" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1a5b08f4244e366a738668a5c3f700e4be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pros::lcd::register_btn2_cb</definition>
        <argsstring>(lcd_btn_cb_fn_t cb)</argsstring>
        <name>register_btn2_cb</name>
        <param>
          <type><ref refid="namespacepros_1_1lcd_1a22ffa85cc6287c5c366fe0cb2416e28a" kindref="member">lcd_btn_cb_fn_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers a callback function for the rightmost button. </para>
        </briefdescription>
        <detaileddescription>
<para>When the rightmost button on the emulated three-button LCD is pressed, the user-provided callback function will be invoked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function of type lcd_btn_cb_fn_t(void (*cb)(void)) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="179" column="6" declfile="pros/include/pros/llemu.hpp" declline="179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1lcd_1aa6ba655373f3eb0d9ef702337e89f624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t pros::lcd::read_buttons</definition>
        <argsstring>(void)</argsstring>
        <name>read_buttons</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the button status from the emulated three-button LCD. </para>
        </briefdescription>
        <detaileddescription>
<para>The value returned is a 3-bit integer where 1 0 0 indicates the left button is pressed, 0 1 0 indicates the center button is pressed, and 0 0 1 indicates the right button is pressed. 0 is returned if no buttons are currently being pressed.</para>
<para>Note that this function is provided for legacy API compatibility purposes, with the caveat that the V5 touch screen does not actually support pressing multiple points on the screen at the same time.</para>
<para><simplesect kind="return"><para>The buttons pressed as a bit mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/llemu.hpp" line="195" column="14" declfile="pros/include/pros/llemu.hpp" declline="195" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pros/include/pros/llemu.hpp" line="32" column="13"/>
  </compounddef>
</doxygen>
