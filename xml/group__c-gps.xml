<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__c-gps" kind="group">
    <compoundname>c-gps</compoundname>
    <title>VEX GPS Sensor C API</title>
    <innerfile refid="gps_8h">gps.h</innerfile>
    <innerclass refid="structpros_1_1c_1_1gps__raw__s" prot="public">pros::c::gps_raw_s</innerclass>
    <innerclass refid="structgps__status__s__t" prot="public">gps_status_s_t</innerclass>
    <innerclass refid="structgps__accel__s__t" prot="public">gps_accel_s_t</innerclass>
    <innerclass refid="structgps__gyro__s__t" prot="public">gps_gyro_s_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__c-gps_1ga207fc83ba7d708bb8fe13855938469ef" prot="public" static="no">
        <type>struct gps_raw_s</type>
        <definition>typedef struct gps_raw_s gps_accel_s_t</definition>
        <argsstring></argsstring>
        <name>gps_accel_s_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="58" column="2" bodyfile="pros/gps.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__c-gps_1ga67a9badd3682634a75ad506fd87f7903" prot="public" static="no">
        <type>struct gps_raw_s</type>
        <definition>typedef struct gps_raw_s gps_gyro_s_t</definition>
        <argsstring></argsstring>
        <name>gps_gyro_s_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="58" column="2" bodyfile="pros/gps.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__c-gps_1ga0bebcb6a5be6dc96c165711cbe710aea" prot="public" static="no" mutable="no">
        <type></type>
        <definition>gps_status_s_t</definition>
        <argsstring></argsstring>
        <name>gps_status_s_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="58" column="2" bodyfile="pros/gps.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__c-gps_1ga180d5d84012c16d5d28c19d7607b931e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __attribute__</definition>
        <argsstring>((__packed__)) gps_status_s</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__packed__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>X Position (meters)</para>
<para>Y Position (meters)</para>
<para>Percieved Pitch based on GPS + IMU</para>
<para>Percieved Roll based on GPS + IMU</para>
<para>Percieved Yaw based on GPS + IMU</para>
        </inbodydescription>
        <location file="pros/gps.h" line="1" column="0" bodyfile="pros/gps.h" bodystart="47" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gaaacc1a85b6f91aeeac8ad61c4abc647e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_initialize_full</definition>
        <argsstring>(uint8_t port, double xInitial, double yInitial, double headingInitial, double xOffset, double yOffset)</argsstring>
        <name>gps_initialize_full</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xInitial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yInitial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>headingInitial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xOffset</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yOffset</declname>
        </param>
        <briefdescription>
<para>Set the GPS&apos;s offset relative to the center of turning in meters, as well as its initial position. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian 4-Quadrant X offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian 4-Quadrant Y offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial 4-Quadrant X Position, with (0,0) being at the center of the field (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial 4-Quadrant Y Position, with (0,0) being at the center of the field (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>headingInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Heading with 0 being north on the field, in degrees [0,360) going clockwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>X_OFFSET<sp/>.225</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>Y_OFFSET<sp/>.223</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>X_INITIAL<sp/>1.54</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>Y_INITIAL<sp/>1.14</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>HEADING_INITIAL<sp/>90</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_initialize_full(GPS_PORT,<sp/>X_OFFSET,<sp/>Y_OFFSET,<sp/>X_INITIAL,<sp/>Y_INITIAL,<sp/>HEADING_INITIAL);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="123" column="9" declfile="pros/gps.h" declline="123" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga9bb1c008e968001ab2bd0e3aa7e25464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_set_offset</definition>
        <argsstring>(uint8_t port, double xOffset, double yOffset)</argsstring>
        <name>gps_set_offset</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xOffset</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yOffset</declname>
        </param>
        <briefdescription>
<para>Set the GPS&apos;s offset relative to the center of turning in meters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian 4-Quadrant X offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Cartesian 4-Quadrant Y offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>X_OFFSET<sp/>-.225</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>Y_OFFSET<sp/>.225</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_set_offset(GPS_PORT,<sp/>X_OFFSET,<sp/>Y_OFFSET);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="155" column="9" declfile="pros/gps.h" declline="155" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gac12dc0dd4ea81c32740ef72a5d172736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_get_offset</definition>
        <argsstring>(uint8_t port, double *xOffset, double *yOffset)</argsstring>
        <name>gps_get_offset</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xOffset</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>yOffset</declname>
        </param>
        <briefdescription>
<para>Get the GPS&apos;s location relative to the center of turning/origin in meters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to cartesian 4-Quadrant X offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to cartesian 4-Quadrant Y offset from center of turning (meters) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>*x;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>*y;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>gps_get_offset(GPS_PORT,<sp/>x,<sp/>y);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>1,<sp/>&quot;X<sp/>Offset:<sp/>%4d,<sp/>Y<sp/>Offset:<sp/>%4d&quot;,<sp/>*x,<sp/>*y);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="191" column="9" declfile="pros/gps.h" declline="191" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga292c2836a160552630507d2c3ce08113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_set_position</definition>
        <argsstring>(uint8_t port, double xInitial, double yInitial, double headingInitial)</argsstring>
        <name>gps_set_position</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xInitial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yInitial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>headingInitial</declname>
        </param>
        <briefdescription>
<para>Sets the robot&apos;s location relative to the center of the field in meters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial 4-Quadrant X Position, with (0,0) being at the center of the field (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial 4-Quadrant Y Position, with (0,0) being at the center of the field (meters) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>headingInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>Heading with 0 being north on the field, in degrees [0,360) going clockwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>X_INITIAL<sp/>-1.15</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>Y_INITIAL<sp/>1.45</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>HEADING_INITIAL<sp/>90</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_set_position(GPS_PORT,<sp/>X_INITIAL,<sp/>Y_INITIAL,<sp/>HEADING_INITIAL);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="225" column="9" declfile="pros/gps.h" declline="225" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga9a6507b5e1e6668dbef5185fcf35d0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_set_data_rate</definition>
        <argsstring>(uint8_t port, uint32_t rate)</argsstring>
        <name>gps_set_data_rate</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set the GPS sensor&apos;s data rate in milliseconds, only applies to IMU on GPS. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Data rate in milliseconds (Minimum: 5 ms) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>GPS_DATA_RATE<sp/>5</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_set_data_rate(GPS_PORT,<sp/>GPS_DATA_RATE);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="253" column="9" declfile="pros/gps.h" declline="253" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gabcb755cae646e13f5ee452f4de7234fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::c::gps_get_error</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_error</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get the possible RMS (Root Mean Squared) error in meters for GPS position. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Possible RMS (Root Mean Squared) error in meters for GPS position. If the operation failed, returns PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>error;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>error<sp/>=<sp/>gps_get_error(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="280" column="8" declfile="pros/gps.h" declline="280" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga19a09b05a19c584e740cabc3f1b2dbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgps__status__s__t" kindref="compound">gps_status_s_t</ref></type>
        <definition>gps_status_s_t pros::c::gps_get_status</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_status</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the position and roll, yaw, and pitch of the GPS. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A struct (<ref refid="structgps__status__s__t" kindref="compound">gps_status_s_t</ref>) containing values mentioned above. If the operation failed, all the structure&apos;s members are filled with PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>struct<sp/>gps_status_s_t<sp/>status;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>gps_get_status(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>1,<sp/>&quot;x:<sp/>%3f,<sp/>y:<sp/>%3f,<sp/>pitch:<sp/>%3f&quot;,<sp/>status.x,<sp/>status.y);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>2,<sp/>&quot;yaw:<sp/>%3f,<sp/>roll:<sp/>%3f&quot;,<sp/>status.pitch,<sp/>status.yaw);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>3,<sp/>&quot;roll:<sp/>%3f&quot;,<sp/>status.roll);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="315" column="16" declfile="pros/gps.h" declline="315" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga6629794462b93c861c7f3b51fd603593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::c::gps_get_heading</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_heading</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get the heading in [0,360) degree values. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The heading in [0,360) degree values. If the operation failed, returns PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>heading;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>gps_get_heading(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="346" column="8" declfile="pros/gps.h" declline="346" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gaa9476b021e4105b9bc91dcedc4113672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::c::gps_get_heading_raw</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_heading_raw</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get the heading in the max double value and min double value scale. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The heading in [DOUBLE_MIN, DOUBLE_MAX] values. If the operation fails, returns PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>heading;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>gps_get_heading_raw(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="377" column="8" declfile="pros/gps.h" declline="377" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga9ea3211fc1740e03294f59f979ee6c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pros::c::gps_get_rotation</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_rotation</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Gets the GPS sensor&apos;s elapsed rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The elased heading in degrees. If the operation fails, returns PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>elapsed_rotation;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>elapsed_rotation<sp/>=<sp/>gps_get_rotation(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="404" column="8" declfile="pros/gps.h" declline="404" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga40c00789db37acf3fc33c94d92a612e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_set_rotation</definition>
        <argsstring>(uint8_t port, double target)</argsstring>
        <name>gps_set_rotation</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Set the GPS sensor&apos;s rotation value to target value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Target rotation value to set rotation value to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_set_rotation(GPS_PORT,<sp/>60);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="431" column="9" declfile="pros/gps.h" declline="431" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1ga9fc3c54c39cf2b95736654f1a299cb4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pros::c::gps_tare_rotation</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_tare_rotation</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Tare the GPS sensor&apos;s rotation value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>initialize()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>gps_tare_rotation(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="456" column="9" declfile="pros/gps.h" declline="456" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gadab19854551db9ba848f3f6a947c65cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgps__gyro__s__t" kindref="compound">gps_gyro_s_t</ref></type>
        <definition>gps_gyro_s_t pros::c::gps_get_gyro_rate</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_gyro_rate</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get the GPS&apos;s raw gyroscope values. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as a GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw gyroscope values. If the operation failed, all the structure&apos;s members are filled with PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>struct<sp/>gps_gyro_s_t<sp/>gyro;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>gyro<sp/>=<sp/>gps_get_gyro_rate(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>1,<sp/>&quot;gyroscope-<sp/>x:<sp/>%3f,<sp/>y:<sp/>%3f,<sp/>z:<sp/>%3f&quot;,<sp/>gyro.x,<sp/>gyro.y,<sp/>gyro.z);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="487" column="14" declfile="pros/gps.h" declline="487" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__c-gps_1gaad1a8d1d02da6ab10059bfe385122e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgps__accel__s__t" kindref="compound">gps_accel_s_t</ref></type>
        <definition>gps_accel_s_t pros::c::gps_get_accel</definition>
        <argsstring>(uint8_t port)</argsstring>
        <name>gps_get_accel</name>
        <param>
          <type>uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get the GPS&apos;s raw accelerometer values. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of V5 ports (1-21). ENODEV - The port cannot be configured as an GPS EAGAIN - The sensor is still calibrating</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The V5 GPS&apos;s port number from 1-21 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw accelerometer values. If the operation failed, all the structure&apos;s members are filled with PROS_ERR_F and errno is set.</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">#define<sp/>GPS_PORT<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>struct<sp/>gps_accel_s_t<sp/>accel;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>accel<sp/>=<sp/>gps_get_accel(GPS_PORT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>1,<sp/>&quot;accleration-<sp/>x:<sp/>%3f,<sp/>y:<sp/>%3f,<sp/>z:<sp/>%3f&quot;,<sp/>accel.x,<sp/>accel.y,<sp/>accel.z);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.h" line="517" column="15" declfile="pros/gps.h" declline="517" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>For a pros-specific usage guide on the GPS, please check out our article here. </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
