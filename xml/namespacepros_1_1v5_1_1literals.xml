<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepros_1_1v5_1_1literals" kind="namespace" language="C++">
    <compoundname>pros::v5::literals</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepros_1_1v5_1_1literals_1a6fceebddd1a7c879ccb8ca876c8a8d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">pros::Distance</ref></type>
        <definition>const pros::Distance pros::v5::literals::operator&quot;&quot;_dist</definition>
        <argsstring>(const unsigned long long int d)</argsstring>
        <name>operator&quot;&quot;_dist</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">Distance</ref> sensor object from a literal ending in _dist via calling the constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Distance" kindref="compound">pros::Distance</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Distance<sp/>dist<sp/>=<sp/>2_dist;<sp/>//Makes<sp/>an<sp/>dist<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/distance.hpp" line="242" column="22" declfile="pros/distance.hpp" declline="242" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1v5_1_1literals_1a732b1a09afbe718b4f0e4365de1d3e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Gps" kindref="compound">pros::Gps</ref></type>
        <definition>const pros::Gps pros::v5::literals::operator&quot;&quot;_gps</definition>
        <argsstring>(const unsigned long long int g)</argsstring>
        <name>operator&quot;&quot;_gps</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Gps" kindref="compound">Gps</ref> object with the given port number. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>literals;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pros::Gps<sp/>gps<sp/>=<sp/>1_gps;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>gps.get_position();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>screen_print(TEXT_MEDIUM,<sp/>1,<sp/>&quot;X<sp/>Position:<sp/>%4d,<sp/>Y<sp/>Position:<sp/>%4d&quot;,<sp/>pos.x,<sp/>pos.y);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/gps.hpp" line="927" column="17" declfile="pros/gps.hpp" declline="927" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-imu_1ga693574204d8c18f8317603f826028e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Imu" kindref="compound">pros::Imu</ref></type>
        <definition>const pros::Imu pros::v5::literals::operator&quot;&quot;_imu</definition>
        <argsstring>(const unsigned long long int i)</argsstring>
        <name>operator&quot;&quot;_imu</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Imu" kindref="compound">Imu</ref> from a literal ending in _imu via calling the constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Imu" kindref="compound">pros::Imu</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Imu<sp/>imu<sp/>=<sp/>2_imu;<sp/>//Makes<sp/>an<sp/>IMU<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/imu.hpp" line="1070" column="17" declfile="pros/imu.hpp" declline="1070" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1ga68d85bff75a4da45a9019e0449e1703b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">pros::Motor</ref></type>
        <definition>const pros::Motor pros::v5::literals::operator&quot;&quot;_mtr</definition>
        <argsstring>(const unsigned long long int m)</argsstring>
        <name>operator&quot;&quot;_mtr</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">Motor</ref> from a literal ending in _mtr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">pros::Motor</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Motor<sp/>motor<sp/>=<sp/>2_mtr;<sp/>//Makes<sp/>an<sp/>Motor<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="2408" column="19" declfile="pros/motors.hpp" declline="2408" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__cpp-motors_1gada0f69d38dd1f1e8af907dccaf48afb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">pros::Motor</ref></type>
        <definition>const pros::Motor pros::v5::literals::operator&quot;&quot;_rmtr</definition>
        <argsstring>(const unsigned long long int m)</argsstring>
        <name>operator&quot;&quot;_rmtr</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Constructs a reversed <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">Motor</ref> from a literal ending in _rmtr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Motor" kindref="compound">pros::Motor</ref> for the corresponding port that is reversed</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::motor<sp/>motor<sp/>=<sp/>2_rmtr;<sp/>//Makes<sp/>an<sp/>reversed<sp/>Motor<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/motors.hpp" line="2422" column="19" declfile="pros/motors.hpp" declline="2422" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1v5_1_1literals_1aaa943f214dd0f11174dfb5b4962a26be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">pros::Optical</ref></type>
        <definition>const pros::Optical pros::v5::literals::operator&quot;&quot;_opt</definition>
        <argsstring>(const unsigned long long int o)</argsstring>
        <name>operator&quot;&quot;_opt</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">Optical</ref> sensor from a literal ending in _opt. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Optical" kindref="compound">pros::Optical</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Optical<sp/>opt<sp/>=<sp/>2_opt;<sp/>//Makes<sp/>an<sp/>Optical<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/optical.hpp" line="434" column="21" declfile="pros/optical.hpp" declline="434" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacepros_1_1v5_1_1literals_1a211c452a20622fc409fb5e333989c14d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">pros::Rotation</ref></type>
        <definition>const pros::Rotation pros::v5::literals::operator&quot;&quot;_rot</definition>
        <argsstring>(const unsigned long long int r)</argsstring>
        <name>operator&quot;&quot;_rot</name>
        <param>
          <type>const unsigned long long int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">Rotation</ref> sensor from a literal ending in _rot. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classpros_1_1v5_1_1Rotation" kindref="compound">pros::Rotation</ref> for the corresponding port</para>
</simplesect>
<bold>Example</bold> <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>pros::literals;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>opcontrol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>pros::Rotation<sp/>rotation<sp/>=<sp/>2_rot;<sp/>//Makes<sp/>an<sp/>Motor<sp/>object<sp/>on<sp/>port<sp/>2</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/rotation.hpp" line="389" column="22" declfile="pros/rotation.hpp" declline="389" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pros/distance.hpp" line="228" column="18"/>
  </compounddef>
</doxygen>
