<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classpros_1_1ADIMotor" kind="class" language="C++" prot="public">
    <compoundname>pros::ADIMotor</compoundname>
    <basecompoundref refid="classpros_1_1ADIPort" prot="private" virt="non-virtual">pros::ADIPort</basecompoundref>
    <includes refid="adi_8hpp" local="no">adi.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1ADIMotor_1afd2da0e8c53a8bc0c999d5232242069a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pros::ADIMotor::ADIMotor</definition>
        <argsstring>(std::uint8_t port)</argsstring>
        <name>ADIMotor</name>
        <param>
          <type>std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures an ADI port to act as a <ref refid="classpros_1_1Motor" kindref="compound">Motor</ref>.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of ADI Ports.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIMotor_1ad8e9be8dfbc022e893a4d15996fe3bcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIMotor::stop</definition>
        <argsstring>(void) const</argsstring>
        <name>stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops the motor on the given port.</para><para>This function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as a motor</para><para><simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="338" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="24">
        <label>pros::ADIMotor</label>
        <link refid="classpros_1_1ADIMotor"/>
        <childnode refid="25" relation="private-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>pros::ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="26">
        <label>pros::ADIMotor</label>
        <link refid="classpros_1_1ADIMotor"/>
        <childnode refid="27" relation="private-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>pros::ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
    </collaborationgraph>
    <location file="pros/include/pros/adi.hpp" line="312" column="1" bodyfile="pros/include/pros/adi.hpp" bodystart="312" bodyend="366"/>
    <listofallmembers>
      <member refid="classpros_1_1ADIPort_1a75f3b6c1ae3c1f6b755e18444e7559d6" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>_port</name></member>
      <member refid="classpros_1_1ADIMotor_1afd2da0e8c53a8bc0c999d5232242069a" prot="public" virt="non-virtual"><scope>pros::ADIMotor</scope><name>ADIMotor</name></member>
      <member refid="classpros_1_1ADIPort_1ab6ef7710de366895859d770ffb1d8cf1" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1a7f44b44ce0528ea4c5ef83ed8465e72d" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1a1227bc815b12d2789cb78f6d3dcaf37b" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>get_config</name></member>
      <member refid="classpros_1_1ADIPort_1ac79b5fd3ce67ae6ffc4b1fbbb306e997" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>get_value</name></member>
      <member refid="classpros_1_1ADIPort_1abd86653eebbc34b863ace81839f7e40c" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>set_config</name></member>
      <member refid="classpros_1_1ADIPort_1ae6711117fbceb3bb6e3602c4ef63aff1" prot="private" virt="non-virtual"><scope>pros::ADIMotor</scope><name>set_value</name></member>
      <member refid="classpros_1_1ADIMotor_1ad8e9be8dfbc022e893a4d15996fe3bcd" prot="public" virt="non-virtual"><scope>pros::ADIMotor</scope><name>stop</name></member>
      <member refid="classpros_1_1ADIPort_1ae6a3753c05e008992e6eff5e8c927e46" prot="private" virt="virtual"><scope>pros::ADIMotor</scope><name>~ADIPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
