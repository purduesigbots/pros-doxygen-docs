<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classpros_1_1ADIAnalogIn" kind="class" language="C++" prot="public">
    <compoundname>pros::ADIAnalogIn</compoundname>
    <basecompoundref refid="classpros_1_1ADIPort" prot="private" virt="non-virtual">pros::ADIPort</basecompoundref>
    <includes refid="adi_8hpp" local="no">adi.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpros_1_1ADIAnalogIn_1aeac81958e7ba33ee9693ab843f5b55ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pros::ADIAnalogIn::ADIAnalogIn</definition>
        <argsstring>(std::uint8_t port)</argsstring>
        <name>ADIAnalogIn</name>
        <param>
          <type>std::uint8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures an ADI port to act as an Analog Input.</para><para>This function uses the following values of errno when an error state is reached: ENXIO - The given value is not within the range of ADI Ports</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number (from 1-8, &apos;a&apos;-&apos;h&apos;, &apos;A&apos;-&apos;H&apos;) to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration type for the port</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIAnalogIn_1ac8dd1e625cbcec4951d20be0c0fa2d3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIAnalogIn::calibrate</definition>
        <argsstring>(void) const</argsstring>
        <name>calibrate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calibrates the analog sensor on the specified port and returns the new calibration value.</para><para>This method assumes that the true sensor value is not actively changing at this time and computes an average from approximately 500 samples, 1 ms apart, for a 0.5 s period of calibration. The average value thus calculated is returned and stored for later calls to the <ref refid="classpros_1_1ADIAnalogIn_1a5930ce87c880833bda8cd202613b8d80" kindref="member">pros::ADIAnalogIn::get_value_calibrated()</ref> and <ref refid="classpros_1_1ADIAnalogIn_1a65bfed175ed1b0efce4566e78e7f9473" kindref="member">pros::ADIAnalogIn::get_value_calibrated_HR()</ref> functions. These functions will return the difference between this value and the current sensor value when called.</para><para>Do not use this function when the sensor value might be unstable (gyro rotation, accelerometer movement).</para><para>This function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as an analog input</para><para><simplesect kind="return"><para>The average sensor value computed by this function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIAnalogIn_1a5930ce87c880833bda8cd202613b8d80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIAnalogIn::get_value_calibrated</definition>
        <argsstring>(void) const</argsstring>
        <name>get_value_calibrated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the 12 bit calibrated value of an analog input port.</para><para>The <ref refid="classpros_1_1ADIAnalogIn_1ac8dd1e625cbcec4951d20be0c0fa2d3c" kindref="member">pros::ADIAnalogIn::calibrate()</ref> function must be run first. This function is inappropriate for sensor values intended for integration, as round-off error can accumulate causing drift over time. Use <ref refid="classpros_1_1ADIAnalogIn_1a65bfed175ed1b0efce4566e78e7f9473" kindref="member">pros::ADIAnalogIn::get_value_calibrated_HR()</ref> instead.</para><para>This function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as an analog input</para><para><simplesect kind="return"><para>The difference of the sensor value from its calibrated default from -4095 to 4095 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpros_1_1ADIAnalogIn_1a65bfed175ed1b0efce4566e78e7f9473" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t pros::ADIAnalogIn::get_value_calibrated_HR</definition>
        <argsstring>(void) const</argsstring>
        <name>get_value_calibrated_HR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the 16 bit calibrated value of an analog input port.</para><para>The <ref refid="classpros_1_1ADIAnalogIn_1ac8dd1e625cbcec4951d20be0c0fa2d3c" kindref="member">pros::ADIAnalogIn::calibrate()</ref> function must be run first. This is intended for integrated sensor values such as gyros and accelerometers to reduce drift due to round-off, and should not be used on a sensor such as a line tracker or potentiometer.</para><para>The value returned actually has 16 bits of &quot;precision&quot;, even though the ADC only reads 12 bits, so that error induced by the average value being between two values when integrated over time is trivial. Think of the value as the true value times 16.</para><para>This function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as an analog input</para><para><simplesect kind="return"><para>The difference of the sensor value from its calibrated default from -16384 to 16384 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/include/pros/adi.hpp" line="168" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>pros::ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
      <node id="0">
        <label>pros::ADIAnalogIn</label>
        <link refid="classpros_1_1ADIAnalogIn"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>pros::ADIPort</label>
        <link refid="classpros_1_1ADIPort"/>
      </node>
      <node id="2">
        <label>pros::ADIAnalogIn</label>
        <link refid="classpros_1_1ADIAnalogIn"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pros/include/pros/adi.hpp" line="88" column="1" bodyfile="pros/include/pros/adi.hpp" bodystart="88" bodyend="185"/>
    <listofallmembers>
      <member refid="classpros_1_1ADIPort_1a75f3b6c1ae3c1f6b755e18444e7559d6" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>_port</name></member>
      <member refid="classpros_1_1ADIAnalogIn_1aeac81958e7ba33ee9693ab843f5b55ed" prot="public" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>ADIAnalogIn</name></member>
      <member refid="classpros_1_1ADIPort_1ab6ef7710de366895859d770ffb1d8cf1" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIPort_1a7f44b44ce0528ea4c5ef83ed8465e72d" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>ADIPort</name></member>
      <member refid="classpros_1_1ADIAnalogIn_1ac8dd1e625cbcec4951d20be0c0fa2d3c" prot="public" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>calibrate</name></member>
      <member refid="classpros_1_1ADIPort_1a1227bc815b12d2789cb78f6d3dcaf37b" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>get_config</name></member>
      <member refid="classpros_1_1ADIPort_1ac79b5fd3ce67ae6ffc4b1fbbb306e997" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>get_value</name></member>
      <member refid="classpros_1_1ADIAnalogIn_1a5930ce87c880833bda8cd202613b8d80" prot="public" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>get_value_calibrated</name></member>
      <member refid="classpros_1_1ADIAnalogIn_1a65bfed175ed1b0efce4566e78e7f9473" prot="public" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>get_value_calibrated_HR</name></member>
      <member refid="classpros_1_1ADIPort_1abd86653eebbc34b863ace81839f7e40c" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>set_config</name></member>
      <member refid="classpros_1_1ADIPort_1ae6711117fbceb3bb6e3602c4ef63aff1" prot="private" virt="non-virtual"><scope>pros::ADIAnalogIn</scope><name>set_value</name></member>
      <member refid="classpros_1_1ADIPort_1ae6a3753c05e008992e6eff5e8c927e46" prot="private" virt="virtual"><scope>pros::ADIAnalogIn</scope><name>~ADIPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
