<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="md_docs_tutorials_walkthrough_creating-c-project" kind="page">
    <compoundname>md_docs_tutorials_walkthrough_creating-c-project</compoundname>
    <title>Creating a C Project</title>
    <detaileddescription>
<para>By default, a new PROS project contains C++ source files and the C++ API. If you would prefer to program in C instead, change the extension of the source files (prior to PROS kernel 3.2.0: <computeroutput>initialize.cpp</computeroutput>, <computeroutput>autonomous.cpp</computeroutput>, and <computeroutput>opcontrol.cpp</computeroutput>; after PROS kernel 3.2.0: <computeroutput>main.cpp</computeroutput>) to <computeroutput>.c</computeroutput>.</para><para><simplesect kind="warning"><para>Do not change any of the PROS header files in this process. That will cause the wrong files to be included in your project, and will likely prevent compilation. Only modify the extensions of the <computeroutput>.cpp</computeroutput> files.</para></simplesect>
This will compile your PROS project as C code, and will give you access to the <ulink url="../../api/c/index.html">C API</ulink>.</para><para>If you&apos;re interested in combining C and C++, you should read through the <ulink url="../general/combining-c-cpp.html">Combining C and C++ tutorial</ulink>. Please note that it is typically a complicated matter to combine the two, and rarely a good idea. </para>    </detaileddescription>
  </compounddef>
</doxygen>
