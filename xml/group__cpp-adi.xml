<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__cpp-adi" kind="group">
    <compoundname>cpp-adi</compoundname>
    <title>ADI (TriPort) C++ API</title>
    <innerfile refid="adi_8hpp">adi.hpp</innerfile>
    <innernamespace refid="namespacepros">pros</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__cpp-adi_1ga2d31825366889c69e13affe8888e3009" prot="public" static="no">
        <name>LEGACY_TYPEDEF</name>
        <param><defname>old_name</defname></param>
        <param><defname>new_name</defname></param>
        <initializer>using old_name [[deprecated(&quot;use &quot; #new_name &quot; instead&quot;)]] = new_name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pros/adi.hpp" line="41" column="9" bodyfile="pros/adi.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The external ADI API can be found <ref refid="group__ext-adi" kindref="compound">here.</ref> </para>
</simplesect>
<simplesect kind="note"><para>Additional example code for this module can be found in its <ref refid="adi" kindref="compound">Tutorial.</ref> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
